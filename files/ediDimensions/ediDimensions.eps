%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 225 540 254 569
%%LanguageLevel: 1
%%Title: ediDimensions.eps
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 1 def
/CorelIsEPS true def
/wCorel3Dict 300 dict def wCorel3Dict begin
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def/$fmp 50 def/@dlt_hsb{$fco nff ge
{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/kdb xd nff $fco sub div
/kdb2 xd sub neg 2 div dup $fco div/kds xd nff $fco sub div/kds2 xd sub neg dup
0 eq{pop $frb 2 eq{0.99}{-0.99}ifelse}if dup $frb 2 eq exch 0 lt and{1 add}if
dup $frb 1 eq exch 0 gt and{1 sub}if 2 div dup $fco div/kdh xd nff $fco sub div
/kdh2 xd}bd/@dlt{$fse $fss sub dup/nff xd $fmp mul $fmp add 100 div round cvi
dup 0 le{pop 1}if/$fco xd/$fi 0 def $frb dup 1 eq exch 2 eq or{grad_color_from
devicen_to_cmyk cmyk2rgb rgb2hsb 3 copy/myb xd/mys xd/myh xd grad_color_to
devicen_to_cmyk cmyk2rgb rgb2hsb 3 1 roll 4 1 roll 5 1 roll @dlt_hsb}{
bGradDeviceN{@dlt_devicen}{@dlt_cmyk}ifelse}ifelse}bd/@dlt_cmyk{$fmp 50 eq{
grad_color_to 1 get grad_color_from 1 get sub nff div/dC xd grad_color_to 2 get
grad_color_from 2 get sub nff div/dM xd grad_color_to 3 get grad_color_from 3
get sub nff div/dY xd grad_color_to 4 get grad_color_from 4 get sub nff div/dK
xd}{$fco nff ge{/$fco nff 1 sub def}if grad_color_to 1 get grad_color_from 1
get sub 2 div $fco div/dC xd grad_color_to 2 get grad_color_from 2 get sub 2
div $fco div/dM xd grad_color_to 3 get grad_color_from 3 get sub 2 div $fco div
/dY xd grad_color_to 4 get grad_color_from 4 get sub 2 div $fco div/dK xd
/co_steps nff $fco sub def grad_color_to 1 get grad_color_from 1 get sub 2 div
co_steps div/dC2 xd grad_color_to 2 get grad_color_from 2 get sub 2 div
co_steps div/dM2 xd grad_color_to 3 get grad_color_from 3 get sub 2 div
co_steps div/dY2 xd grad_color_to 4 get grad_color_from 4 get sub 2 div
co_steps div/dK2 xd}ifelse}bd/@dlt_devicen{$fmp 50 eq{grad_color_from length 6
idiv dup/devicen_deltas exch array def 0 1 3 -1 roll 1 sub{dup dup
grad_color_to exch get 2 1 roll grad_color_from exch get sub nff div
devicen_deltas 3 1 roll put}for}{$fco nff ge{/$fco nff 1 sub def}if
grad_color_from length 6 idiv dup dup/devicen_deltas exch array def
/devicen_deltas2 exch array def 0 1 3 -1 roll 1 sub{dup dup dup grad_color_to
exch get exch grad_color_from exch get sub 2 div dup 3 1 roll $fco div
devicen_deltas 3 1 roll put nff $fco sub div devicen_deltas2 3 1 roll put}for
}ifelse}bd/@ffnxt{/$fi $fi 1 add def $frb dup 1 eq exch 2 eq or{pop[1.0 myh mys
myb $fi $fco lt{kdb add 3 1 roll kds add 3 1 roll kdh add 3 1 roll}{kdb2 add 3
1 roll kds2 add 3 1 roll kdh2 add 3 1 roll}ifelse 3 copy/myb xd/mys xd/myh xd
hsb2rgb rgb2cmyk null]}{bGradDeviceN{dup length 6 idiv 1 sub 0 1 3 -1 roll{
exch dup dup 4 -1 roll dup $fi $fco lt $fmp 50 eq or{devicen_deltas exch get}{
devicen_deltas2 exch get}ifelse 4 1 roll dup 3 1 roll get 4 -1 roll add put
}for}{$fi $fco lt $fmp 50 eq or{[exch aload pop pop dK add 4 1 roll dY add 4 1
roll dM add 4 1 roll dC add 4 1 roll null]}{[exch aload pop pop dK2 add 4 1
roll dY2 add 4 1 roll dM2 add 4 1 roll dC2 add 4 1 roll null]}ifelse}ifelse}
ifelse}bd/@ffcol{set_fill_color}bd/@ff_strip_init{/$fil 0 def $frb dup 1 eq
exch 2 eq or{/strip_color[1.0 grad_color_from devicen_to_cmyk null]def}{
/strip_color grad_color_from def}ifelse}bd/@ftl{1 index 4 index sub dup $pad
mul dup/$pdw xd 2 mul sub $fst div/$wid xd 2 index sub/$hei xd pop Tl @dlt
@ff_strip_init strip_color @ffcol $fss 0 eq{n 0 0 m 0 $hei l $pdw $hei l $pdw 0
l @cp F}if $fss $wid mul $pdw add 0 Tl nff{n 0 0 m 0 $hei l $wid $hei l $wid 0
l @cp strip_color @ffcol F $wid 0 Tl strip_color @ffnxt/strip_color exch def}
repeat n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp strip_color @ffcol F}bd/@ftrs
{1 index 4 index sub dup $rox mul/$row xd 2 div 1 index 4 index sub dup $roy
mul/$roh xd 2 div 2 copy dup mul exch dup mul add sqrt $row dup mul $roh dup
mul add sqrt add dup/$hei xd $fst div/$wid xd 4 index add $roh add exch 5 index
add $row add exch Tl $fan rotate pop pop pop pop @dlt @ff_strip_init
strip_color @ffcol $fss 0 eq{$fty 3 eq{$hei dup neg dup m 2 mul @sqr}{0 0 m 0 0
$hei 0 360 arc}ifelse F}if 1.0 $pad 2 mul sub dup scale $hei $fss $wid mul sub
/$hei xd nff{$fty 3 eq{n $hei dup neg dup m 2 mul @sqr}{n 0 0 m 0 0 $hei 0 360
arc}ifelse strip_color @ffcol F/$hei $hei $wid sub def strip_color @ffnxt
/strip_color exch def}repeat}bd/@ftc{1 index 4 index sub dup $rox mul/$row xd 2
div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul exch dup mul
add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst div/$wid xd 4
index add $roh add exch 5 index add $row add exch Tl pop pop pop pop @dlt
@ff_strip_init strip_color @ffcol $fss 0 eq{F}{n}ifelse/$dang 180 $fst 1 sub
div def/$sang $dang -2 div 180 add def/$eang $dang 2 div 180 add def/$sang
$sang $dang $fss mul add def/$eang $eang $dang $fss mul add def/$sang $eang
$dang sub def nff{n 0 0 m 0 0 $hei $sang $fan add $eang $fan add arc
strip_color @ffcol F 0 0 m 0 0 $hei $eang neg $fan add $sang neg $fan add arc F
/$sang $eang def/$eang $eang $dang add def strip_color @ffnxt/strip_color exch
def}repeat}bd/@fstAdjust{72 0 matrix defaultmatrix dtransform exch dup mul exch
dup mul add sqrt currentscreen pop pop div dup mul 1 add cvi 2 256 InRange $fsc
1 sub dup 0 le{pop 1}if mul/opt$fst xd AutoSteps dup 1 eq exch 3 eq or{opt$fst
dup dup $fst dup 3 1 roll div exch 3 -1 roll gt{/$adj xd/$fst xd}{pop pop}
ifelse}if AutoSteps dup 2 eq exch 3 eq or{opt$fst dup dup $fst dup 3 1 roll div
exch 3 -1 roll lt{/$adj xd/$fst xd}{pop pop}ifelse}if}bd/@ff{/old$fst $fst def
/$adj 1 def/$fss 0 def $o 1 eq setoverprint grad_use_shading_dict{
CorelShfillDoFill}{AutoSteps 0 gt{@fstAdjust}if 1 1 $fsc 1 sub{dup 1 sub $fsa
exch 2 mul get/grad_color_from exch def dup $fsa exch 2 mul get/grad_color_to
exch def $fsa exch 2 mul 1 add get $adj mul cvi $fss add/$fse xd bGradDeviceN{
/grad_color_from[grad_color_from aload pop tint_params aload pop sNamesDeviceN
aload pop]bind def/grad_color_to[grad_color_to aload pop tint_params aload pop
sNamesDeviceN aload pop]bind def}if @sv $ctm setmatrix wclip Bbllx Bblly Bburx
Bbury $fty 2 eq{@ftc}{1 index 3 index m 2 copy l 3 index 1 index l 3 index 3
index l @cp $fty dup 1 eq exch 3 eq or{@ftrs}{pop pop pop pop $fan rotate
pathbbox @ftl}ifelse}ifelse @rs/$fss $fse def}for @np}ifelse/$fst old$fst def}
bd/set_gradient{/$fil 2 def/bGradDeviceN xd/$fmp xd/$roy xd/$rox xd/$pad xd
/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd/$fst xd/$fsc xd/$fsa xd}bd
/grad_use_shading_dict{$fty 0 eq $fty 1 eq or $fty 3 eq or level3 and $frb 1 ne
and $frb 2 ne and}bd
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/CorelShfillMapColor{SepMode_5 0 eq{bShfillDeviceN not{[exch aload pop pop
@tc_5]}if}{bShfillDeviceN{[exch aload pop tint_params aload pop sNamesDeviceN
aload pop]}if[exch separate_color aload pop pop @tc_5 SepsColor not{4 1 roll
pop pop pop 1 exch sub}if]}ifelse}bd/CorelShfillGetColorSpace{SepMode_5 0 eq
bShfillDeviceN and{[/DeviceN sNamesDeviceN/DeviceCMYK{tint_params
CorelTintTransformFunction}]}{SepMode_5 0 eq{/DeviceCMYK}{SepsColor{
/DeviceCMYK}{/DeviceGray}ifelse}ifelse}ifelse}bd/CorelShfillDoLinearParams{
flattenpath pathbbox 2 index add 2 div/$y1 xd/$x1 xd $y1/$y0 xd pop/$x0 xd $x1
$x0 sub $pad mul/$pdw xd $x1 $pdw sub/$x1 xd $x0 $pdw add/$x0 xd $x0 $x1 add 2
div/$xmid xd $y0/$ymid xd $xmid $x1 sub/$x1 xd $x1 neg/$x0 xd 0/$y0 xd 0/$y1 xd
$xmid $ymid translate/Coords[$x1 $y1 $x0 $y0]}def
/CorelShfillDoRadialSquareParams{flattenpath pathbbox/$y1 xd/$x1 xd/$y0 xd/$x0
xd $x1 $x0 sub/$width xd $y1 $y0 sub/$height xd $rox $width mul/$row xd $roy
$height mul/$roh xd $x0 $width 2 div add/$x0 xd $y0 $height 2 div add/$y0 xd
$x0 $row add/$x0 xd $y0 $roh add/$y0 xd $x0/$x1 xd $y0/$y1 xd $width dup mul
$height dup mul add sqrt 2 div $row dup mul $roh dup mul add sqrt add 1 $pad 2
mul sub mul/$rad0 xd 0/$rad1 xd}def/CorelShfillDoRadialParams{
CorelShfillDoRadialSquareParams/Coords[$x0 $y0 $rad0 $x1 $y1 $rad1]}def
/CorelShfillDoSquareParams{CorelShfillDoRadialSquareParams $x0 $y0 translate
$rad0/$x1 xd $x1 neg/$x0 xd $rad0/$y1 xd $y1 neg/$y0 xd/DataSource[0 0 0 1 0
$x1 $y1 0 0 $x0 $y1 0 2 $x0 $y0 0 2 $x1 $y0 0 2 $x1 $y1 0]}def
/CorelShfillFunction{<< $fty 0 eq{/ShadingType 2}{$fty 1 eq{/ShadingType 3}{
$fty 3 eq{/ShadingType 4}if}ifelse}ifelse/ColorSpace CorelShfillGetColorSpace
/Domain[0 1]$fty 0 eq{CorelShfillDoLinearParams}{$fty 1 eq{
CorelShfillDoRadialParams}{$fty 3 eq{CorelShfillDoSquareParams}if}ifelse
}ifelse/Function <</FunctionType 3/Domain[0 1]/Functions[/dMidPointPS 0.5 log
$fmp 100 div log div def 1 1 $fsc 1 sub{/nColor exch def <</FunctionType 2
/Domain[0 1]/N dMidPointPS/C0 $fsa nColor 1 sub 2 mul get CorelShfillMapColor
/C1 $fsa nColor 2 mul get CorelShfillMapColor >>}for]/Encode[$fsc 1 sub{0 1}
repeat]/Bounds[$fsc 2 gt{1 1 $fsc 2 sub{/nColor exch def/nBandPos 0 def 0 1
nColor{dup nColor le{$fsa exch 2 mul 1 add get nBandPos add/nBandPos exch def
}if}for nBandPos $fst div}for}if]>> $pad 0 gt{/Extend[true true]}{/Extend
[false false]}ifelse >> shfill}bd/CorelShfillDoFill{$ctm setmatrix wclip @gs
$fty 3 eq $pad 0 gt and{bGradDeviceN{$fsa 0 get tint_params sNamesDeviceN
create_colorarray_from_devicen_params set_fill_color}{$fsa 0 get set_fill_color
}ifelse F}if @gr Bbllx Bblly Bburx Bbury 1 index 3 index m 2 copy l 3 index 1
index l 3 index 3 index l @cp pop pop pop pop $fan rotate $o 1 eq setoverprint
/bShfillDeviceN bGradDeviceN def CorelShfillFunction}bd/CorelShfillDoMesh{$o 1
eq setoverprint shfill}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
1.00 setflat
/$fst 2000 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
227.26233 540.00652 251.53795 568.35298 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.28 0.35 0.00 0.56 null ] set_fill_color
251.53285 540.00652 m
238.24063 540.00652 L
238.48753 540.04564 238.74378 540.13606 239.01109 540.28743 C
239.72598 540.69307 240.48765 541.11231 240.87600 541.87852 C
240.91370 541.95506 L
249.58431 541.95506 L
249.58431 551.33263 L
250.25471 551.71389 250.94098 552.12746 251.30296 552.84123 C
251.85770 553.93682 251.31685 554.73392 250.72498 555.54831 C
250.74822 555.60614 250.77685 555.66907 250.80718 555.73087 C
251.05181 555.68069 251.29616 555.63591 251.53625 555.60869 C
251.54164 550.41052 251.53285 545.20781 251.53285 540.00652 C
@c
237.67710 540.00652 m
235.17836 540.00652 L
235.52787 540.54397 235.59619 541.11430 235.66564 541.72800 C
235.75550 541.58967 235.84677 541.45219 235.93918 541.31528 C
236.39613 540.63609 236.98460 540.11820 237.67710 540.00652 C
@c
230.56328 540.00652 m
227.26233 540.00652 L
227.26233 542.04350 L
227.45991 541.93011 227.69376 541.85046 227.98857 541.81106 C
228.47357 541.74557 228.86164 541.83231 229.21115 541.99899 C
229.21115 541.95506 L
230.14148 541.95506 L
230.02469 541.32180 230.02044 540.72624 230.49354 540.09468 C
230.51650 540.06406 230.54003 540.03487 230.56328 540.00652 C
@c
227.26233 552.75392 m
227.26233 568.35298 L
241.41260 568.35298 L
241.52712 568.23846 L
240.53698 568.56104 239.44110 567.94110 238.52466 567.19276 C
238.24006 566.96060 238.03597 566.69216 237.90643 566.40444 C
229.21115 566.40444 L
229.21115 556.98548 L
228.82479 556.78224 228.44778 556.51578 228.09770 556.22976 C
227.13222 555.44230 227.08772 554.24324 227.76491 553.25310 C
227.96702 552.96312 L
227.91033 552.85654 227.83776 552.73861 227.76775 552.63940 C
227.65351 552.67285 227.53843 552.70602 227.42135 552.72784 C
227.36721 552.73805 227.31449 552.74655 227.26233 552.75392 C
@c
F

@rax %Note: Object
225.98957 540.48643 242.43619 556.93304 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.34 0.13 0.00 0.66 null ]  0
[ 1.00 0.76 0.28 0.00 0.24 null ]  999
] 2 999 0 21.78 0 0.12 0 0 50 false set_gradient
241.67509 548.58614 m
241.31820 548.65304 240.96047 548.71654 240.60189 548.77408 C
240.07663 548.85855 239.63386 550.93550 239.99811 551.16142 C
240.18094 551.27480 240.36094 551.39131 240.54009 551.51008 C
240.91058 551.75471 241.60450 552.08636 241.39814 552.64110 C
241.19320 553.19187 240.50551 554.39348 239.79657 554.06296 C
239.37619 553.86680 238.98472 553.54139 238.60913 553.25877 C
238.19443 552.94668 236.44091 554.09811 236.55487 554.58765 C
236.59909 554.77672 236.63934 554.96693 236.67817 555.15685 C
236.75187 555.51713 236.96334 556.08520 236.71049 556.42252 C
236.43496 556.78932 235.14463 556.99455 234.72510 556.86926 C
234.33279 556.75304 234.28800 556.24450 234.22791 555.91200 C
234.18283 555.66397 234.13975 555.41622 234.09978 555.16677 C
233.98441 554.44961 231.91342 554.19109 231.59764 554.68885 C
231.42104 554.96721 231.23849 555.24076 231.05282 555.51260 C
230.45641 556.38340 229.60063 555.60104 228.99997 555.11036 C
228.62976 554.80819 228.69241 554.44054 228.94498 554.07146 C
229.10117 553.84384 229.25877 553.61679 229.41865 553.39257 C
229.77808 552.88743 228.66463 550.98312 227.89984 551.11606 c
227.64359 551.16028 227.35786 551.26715 227.14356 551.30712 C
226.14576 551.49392 226.16589 550.57238 226.02019 549.84387 C
225.81439 548.81093 226.67726 548.78939 227.50384 548.64992 C
228.20939 548.53172 228.67115 546.43748 228.02343 546.01654 C
227.67420 545.79061 227.02961 545.50857 226.92246 545.06324 C
226.83317 544.69134 227.20139 544.32567 227.39102 544.04929 C
227.58038 543.77235 227.78787 543.29499 228.16828 543.24425 C
228.66605 543.17735 229.25509 543.77802 229.62898 544.04702 C
230.57291 544.72904 231.96387 543.59575 231.72945 542.50583 C
231.63959 542.08998 231.34564 541.35326 231.63846 540.96180 C
231.88422 540.63411 232.48517 540.65112 232.84602 540.57572 C
233.15953 540.51024 233.59493 540.37786 233.84721 540.65679 C
234.22734 541.07773 234.21572 541.98369 234.29650 542.52028 C
234.39940 543.20598 236.28728 543.44750 236.57896 542.97014 C
236.75443 542.68356 236.93839 542.40208 237.12633 542.12287 C
237.41518 541.69370 237.73181 541.23137 238.28598 541.54545 C
238.67036 541.76372 239.36797 542.12513 239.57461 542.53247 C
239.82236 543.02202 239.15622 543.67682 238.90025 544.03483 C
238.46939 544.63521 239.47739 546.45392 239.98054 546.33345 C
240.20164 546.28044 240.42416 546.23197 240.64696 546.18633 C
241.07556 546.09874 241.81455 545.83370 242.06882 546.36180 C
242.41408 547.08038 242.69301 548.39565 241.67509 548.58614 C
241.67509 548.58614 L
@c
233.67033 546.45194 m
232.35761 546.69770 231.37200 547.96025 231.62372 549.30444 C
231.87543 550.64891 233.25137 551.46983 234.56381 551.22406 C
235.87597 550.97830 236.86186 549.71518 236.61014 548.37099 C
236.35843 547.02652 234.98249 546.20617 233.67033 546.45194 C
@c
F

@rax %Note: Object
236.42844 551.44913 252.87449 567.89575 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.34 0.13 0.00 0.66 null ]  0
[ 1.00 0.76 0.28 0.00 0.24 null ]  999
] 2 999 0 20.55 0 0.11 0 0 50 false set_gradient
252.11424 559.54913 m
251.75735 559.61575 251.39962 559.67953 251.04104 559.73707 C
250.51578 559.82126 250.07272 561.89849 250.43726 562.12413 C
250.62009 562.23751 250.80009 562.35430 250.97924 562.47279 C
251.34973 562.71770 252.04337 563.04907 251.83729 563.60409 C
251.63235 564.15458 250.94438 565.35647 250.23572 565.02567 C
249.81534 564.82980 249.42387 564.50438 249.04828 564.22176 C
248.63357 563.90939 246.88006 565.06082 246.99402 565.55065 C
247.03795 565.73943 247.07849 565.92964 247.11732 566.11984 C
247.19074 566.47984 247.40249 567.04819 247.14964 567.38523 C
246.87411 567.75231 245.58350 567.95726 245.16425 567.83225 C
244.77165 567.71575 244.72715 567.20750 244.66706 566.87499 C
244.62170 566.62696 244.57890 566.37893 244.53893 566.12976 C
244.42356 565.41231 242.35228 565.15380 242.03679 565.65156 C
241.86019 565.92992 241.67764 566.20375 241.49169 566.47531 C
240.89528 567.34611 240.03978 566.56375 239.43912 566.07335 C
239.06863 565.77090 239.13156 565.40324 239.38384 565.03417 C
239.54031 564.80655 239.69792 564.57978 239.85780 564.35528 C
240.21723 563.85014 239.10378 561.94611 238.33871 562.07877 c
238.08274 562.12328 237.79701 562.22986 237.58271 562.27011 C
236.58491 562.45691 236.60476 561.53537 236.45934 560.80658 C
236.25326 559.77364 237.11641 559.75209 237.94299 559.61263 C
238.64825 559.49471 239.11030 557.40019 238.46230 556.97953 C
238.11307 556.75332 237.46876 556.47156 237.36161 556.02595 C
237.27231 555.65405 237.64054 555.28838 237.83017 555.01200 C
238.01924 554.73534 238.22702 554.25770 238.60743 554.20724 C
239.10520 554.14006 239.69424 554.74101 240.06813 555.01002 C
241.01206 555.69203 242.40274 554.55846 242.16831 553.46854 C
242.07874 553.05298 241.78450 552.31625 242.07761 551.92450 C
242.32337 551.59710 242.92431 551.61411 243.28517 551.53871 C
243.59868 551.47294 244.03408 551.34057 244.28636 551.61950 C
244.66620 552.04044 244.65487 552.94639 244.73565 553.48328 C
244.83855 554.16898 246.72643 554.41049 247.01811 553.93285 C
247.19357 553.64627 247.37726 553.36479 247.56548 553.08586 C
247.85405 552.65669 248.17096 552.19408 248.72513 552.50816 C
249.10951 552.72671 249.80712 553.08784 250.01348 553.49518 C
250.26151 553.98472 249.59509 554.63953 249.33912 554.99754 C
248.90854 555.59792 249.91654 557.41663 250.41940 557.29616 C
250.64079 557.24315 250.86331 557.19496 251.08611 557.14932 C
251.51443 557.06145 252.25370 556.79669 252.50797 557.32479 C
252.85294 558.04337 253.13216 559.35836 252.11424 559.54913 C
252.11424 559.54913 L
@c
244.10920 557.41493 m
242.79676 557.66069 241.81087 558.92296 242.06258 560.26743 C
242.31458 561.61191 243.69024 562.43254 245.00296 562.18677 C
246.31512 561.94101 247.30072 560.67817 247.04901 559.33370 C
246.79729 557.98923 245.42164 557.16917 244.10920 557.41493 C
@c
F

@rax %Note: Object
241.61414 556.64702 247.63748 562.67065 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.28 0.35 0.00 0.56 null ] set_fill_color
244.62595 562.67065 m
246.28904 562.67065 247.63748 561.32192 247.63748 559.65883 c
247.63748 557.99546 246.28904 556.64702 244.62595 556.64702 c
242.96287 556.64702 241.61414 557.99546 241.61414 559.65883 c
241.61414 561.32192 242.96287 562.67065 244.62595 562.67065 c
@c
244.62595 561.69865 m
245.75244 561.69865 246.66576 560.78532 246.66576 559.65883 c
246.66576 558.53235 245.75244 557.61902 244.62595 557.61902 c
243.49946 557.61902 242.58614 558.53235 242.58614 559.65883 c
242.58614 560.78532 243.49946 561.69865 244.62595 561.69865 c
@c
F

@rax %Note: Object
235.94287 550.96980 253.28523 568.35298 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.28 0.35 0.00 0.56 null ] set_fill_color
241.62945 565.39361 m
242.18986 564.50976 244.82806 564.89159 245.01458 566.05323 C
245.05398 566.29899 245.09650 566.54419 245.14129 566.78854 C
245.15688 566.87584 245.21839 567.31380 245.29805 567.36907 C
245.55855 567.44674 246.57562 567.28318 246.76781 567.09213 C
246.85739 566.97250 246.67569 566.36504 246.64535 566.21622 C
246.60737 566.03055 246.56769 565.84488 246.52460 565.66006 C
246.30491 564.71471 248.55335 563.24608 249.33798 563.83654 C
249.67984 564.09392 250.05175 564.40828 250.43924 564.58913 C
250.74000 564.72917 251.30126 563.66277 251.38573 563.43572 C
251.44214 563.28350 250.80350 562.93427 250.71335 562.87474 C
250.53817 562.75852 250.36186 562.64428 250.18328 562.53373 C
249.39780 562.04759 250.01858 559.41307 250.96450 559.26113 C
251.31685 559.20472 251.66778 559.14208 252.01843 559.07688 C
252.02551 559.07546 L
252.62674 558.96293 252.23329 557.86592 252.07370 557.53342 C
252.00709 557.39537 251.28510 557.60031 251.18277 557.62129 C
250.96507 557.66580 250.74794 557.71313 250.53222 557.76472 C
249.49020 558.01446 248.30872 555.60728 248.94737 554.71691 C
249.02957 554.60211 249.65972 553.86312 249.58375 553.71317 C
249.44797 553.44529 248.74894 553.07594 248.48731 552.92740 C
248.25742 552.79701 248.08762 553.17260 247.96517 553.35487 C
247.78120 553.62813 247.60091 553.90337 247.42885 554.18457 C
246.89480 555.05877 244.42894 554.68715 244.25915 553.55499 C
244.20189 553.17345 244.17780 552.21817 243.92891 551.94265 C
243.85181 551.89672 243.46375 551.99339 243.38381 552.01011 C
243.24066 552.04016 242.54929 552.09912 242.46312 552.21364 C
242.34236 552.37465 242.59606 553.16466 242.63943 553.36677 C
242.96173 554.86488 241.10787 556.35591 239.78608 555.40063 C
239.59162 555.26088 238.91386 554.65200 238.67150 554.68460 C
238.56973 554.69820 238.28145 555.20532 238.22787 555.28413 C
238.17373 555.36321 237.80636 555.81392 237.83017 555.91342 C
237.87921 556.11723 238.55499 556.46532 238.72450 556.57502 C
239.73902 557.23408 239.17918 559.89439 238.02265 560.08828 C
237.80268 560.12513 237.09685 560.20139 236.95172 560.36183 C
236.88425 560.43694 236.91487 560.62743 236.93187 560.71247 C
236.97411 560.92394 237.05320 561.63912 237.20258 561.77717 C
237.26353 561.83357 237.42482 561.80948 237.49427 561.79644 C
237.74854 561.74910 237.99345 561.64961 238.25622 561.60397 C
239.42069 561.40214 240.88309 563.74583 240.25039 564.63477 C
239.78154 565.30658 L
239.68148 565.45285 239.58992 565.57446 239.74384 565.69975 C
240.03836 565.94069 240.75213 566.70265 241.09398 566.20290 C
241.27654 565.93616 241.45654 565.66715 241.62945 565.39361 C
@c
247.53515 567.67436 m
247.13065 568.21351 245.65238 568.48054 245.02677 568.29402 C
244.39578 568.10693 244.29231 567.51137 244.19282 566.96088 C
244.14690 566.70973 244.10353 566.45830 244.06299 566.20602 C
243.91814 565.94693 242.71483 565.77600 242.42485 565.93928 C
242.25165 566.21169 242.07194 566.48041 241.88967 566.74715 C
241.06139 567.95698 239.93802 567.10290 239.13439 566.44639 C
238.55924 565.97726 238.59468 565.33465 238.98643 564.76205 C
239.44620 564.10214 L
239.49638 563.74101 238.76306 562.55301 238.41893 562.55357 C
238.16693 562.59751 237.92485 562.69644 237.67143 562.74378 C
236.28841 563.00287 236.18069 561.87184 235.98652 560.90098 C
235.70391 559.48167 236.81962 559.31329 237.86306 559.13754 C
238.16381 558.99468 238.45408 557.60967 238.19896 557.38290 C
237.69609 557.05720 237.05036 556.79216 236.89332 556.13849 C
236.75159 555.54860 237.13682 555.17074 237.43247 554.73959 C
237.72784 554.30731 237.93987 553.80983 238.54365 553.72932 C
239.26535 553.63209 239.82208 554.23984 240.34961 554.61883 C
240.93184 555.03978 241.83921 554.22935 241.69720 553.56973 C
241.56369 552.94980 241.25471 552.21959 241.69181 551.63565 C
242.07279 551.12769 242.65077 551.17899 243.18652 551.06674 C
243.70214 550.95902 244.23562 550.84564 244.64381 551.29635 C
245.14724 551.85420 245.10728 552.71480 245.21216 553.41156 C
245.34283 553.63550 246.36274 553.78573 246.62778 553.64769 C
246.80069 553.36649 246.98126 553.09039 247.16551 552.81685 C
247.59751 552.17480 248.14261 551.62431 248.96268 552.08920 C
249.46923 552.37663 250.17250 552.74315 250.44350 553.27720 C
250.83071 554.04198 250.13622 554.71153 249.73087 555.27789 C
249.58658 555.54690 250.10022 556.59657 250.39587 556.80690 C
250.59288 556.76041 250.79074 556.71789 250.98973 556.67735 C
251.67543 556.53647 252.54397 556.28816 252.94195 557.11587 C
253.47118 558.21770 253.50491 559.77874 252.20296 560.02280 C
252.19559 560.02422 L
251.72901 560.11153 L
251.18220 560.20195 L
250.97131 560.43780 250.73802 561.42822 250.78876 561.77546 C
251.24542 562.07112 L
251.83332 562.45975 252.61143 562.90479 252.28913 563.77162 C
251.97902 564.60472 251.08980 565.95600 250.03191 565.46249 C
249.58687 565.25499 249.20617 564.94630 248.81783 564.65150 C
248.49553 564.68098 247.64457 565.23628 247.48129 565.51946 C
247.58929 566.02346 L
247.70183 566.57480 247.91981 567.16129 247.53515 567.67436 C
@c
F

@rax %Note: Object
231.18718 545.68403 237.21052 551.70737 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.28 0.35 0.00 0.56 null ] set_fill_color
234.19871 551.70737 m
235.86208 551.70737 237.21052 550.35865 237.21052 548.69584 c
237.21052 547.03247 235.86208 545.68403 234.19871 545.68403 c
232.53591 545.68403 231.18718 547.03247 231.18718 548.69584 c
231.18718 550.35865 232.53591 551.70737 234.19871 551.70737 c
@c
234.19871 550.73537 m
235.32548 550.73537 236.23852 549.82205 236.23852 548.69584 c
236.23852 547.56907 235.32548 546.65603 234.19871 546.65603 c
233.07250 546.65603 232.15918 547.56907 232.15918 548.69584 c
232.15918 549.82205 233.07250 550.73537 234.19871 550.73537 c
@c
F

@rax %Note: Object
225.51562 540.00680 242.85827 557.38998 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.28 0.35 0.00 0.56 null ] set_fill_color
231.20249 554.43061 m
231.76290 553.54677 234.40082 553.92831 234.58762 555.09024 C
234.62702 555.33572 234.66954 555.58091 234.71405 555.82554 C
234.72964 555.91257 234.79115 556.35052 234.87109 556.40608 C
235.13131 556.48375 236.14838 556.31991 236.34057 556.12885 C
236.43014 556.00923 236.24872 555.40205 236.21839 555.25294 C
236.18013 555.06728 236.14044 554.88189 236.09764 554.69707 C
235.87767 553.75143 238.12639 552.28280 238.91102 552.87354 C
239.25260 553.13093 239.62479 553.44529 240.01228 553.62586 C
240.31276 553.76617 240.87402 552.69950 240.95877 552.47272 C
241.01518 552.32050 240.37625 551.97099 240.28639 551.91175 C
240.11093 551.79524 239.93461 551.68101 239.75631 551.57046 C
238.97083 551.08460 239.59134 548.44980 240.53726 548.29786 C
240.88961 548.24145 241.24082 548.17909 241.59146 548.11361 C
241.59827 548.11219 L
242.19950 547.99965 241.80605 546.90265 241.64646 546.57014 C
241.57984 546.43238 240.85786 546.63704 240.75553 546.65802 C
240.53783 546.70280 240.32069 546.74986 240.10498 546.80173 C
239.06296 547.05118 237.88148 544.64400 238.52041 543.75364 C
238.60233 543.63912 239.23276 542.90013 239.15650 542.75017 C
239.02072 542.48202 238.32170 542.11266 238.06006 541.96413 C
237.83046 541.83402 237.66066 542.20932 237.53792 542.39159 C
237.35424 542.66485 237.17395 542.94038 237.00189 543.22157 C
236.46784 544.09578 234.00198 543.72387 233.83219 542.59172 C
233.77465 542.21046 233.75055 541.25518 233.50167 540.97937 C
233.42485 540.93345 233.03650 541.03039 232.95657 541.04712 C
232.81370 541.07688 232.12205 541.13613 232.03616 541.25036 C
231.91540 541.41137 232.16882 542.20167 232.21247 542.40378 C
232.53477 543.90161 230.68091 545.39263 229.35912 544.43735 C
229.16466 544.29789 228.48661 543.68901 228.24425 543.72132 C
228.14249 543.73521 227.85449 544.24233 227.80091 544.32113 C
227.74649 544.39994 227.37912 544.85093 227.40293 544.95014 C
227.45197 545.15395 228.12803 545.50233 228.29754 545.61203 C
229.31178 546.27109 228.75194 548.93112 227.59540 549.12501 C
227.37572 549.16186 226.66989 549.23811 226.52476 549.39883 C
226.45701 549.47395 226.48762 549.66444 226.50463 549.74920 C
226.54715 549.96094 226.62595 550.67613 226.77534 550.81389 C
226.83657 550.87030 226.99786 550.84620 227.06702 550.83317 C
227.32129 550.78583 227.56649 550.68633 227.82898 550.64069 C
228.99345 550.43887 230.45613 552.78255 229.82343 553.67150 C
229.35430 554.34359 L
229.25452 554.48957 229.16296 554.61118 229.31688 554.73676 C
229.61140 554.97770 230.32488 555.73965 230.66702 555.23991 C
230.84957 554.97288 231.02929 554.70416 231.20249 554.43061 C
@c
237.10819 556.71109 m
236.70340 557.25024 235.22513 557.51726 234.59953 557.33074 C
233.96882 557.14394 233.86535 556.54838 233.76557 555.99761 C
233.71994 555.74674 233.67628 555.49502 233.63575 555.24274 C
233.49118 554.98394 232.28759 554.81272 231.99789 554.97628 C
231.82441 555.24869 231.64498 555.51713 231.46243 555.78387 C
230.63443 556.99370 229.51106 556.13991 228.70743 555.48340 C
228.13200 555.01398 228.16772 554.37137 228.55918 553.79877 C
229.01924 553.13915 L
229.06942 552.77802 228.33609 551.59002 227.99197 551.59058 C
227.73969 551.63424 227.49761 551.73317 227.24419 551.78050 C
225.86117 552.03987 225.75373 550.90885 225.55956 549.93798 C
225.27666 548.51868 226.39238 548.35030 227.43581 548.17427 C
227.73685 548.03140 228.02712 546.64639 227.77172 546.41962 C
227.26913 546.09420 226.62312 545.82917 226.46608 545.17521 C
226.32463 544.58561 226.70986 544.20775 227.00551 543.77660 C
227.30088 543.34431 227.51291 542.84683 228.11641 542.76633 C
228.83811 542.66910 229.39512 543.27657 229.92236 543.65584 C
230.50488 544.07650 231.41225 543.26608 231.26995 542.60646 C
231.13672 541.98680 230.82746 541.25660 231.26485 540.67238 C
231.64583 540.16469 232.22353 540.21572 232.75956 540.10346 C
233.27490 539.99603 233.80866 539.88236 234.21657 540.33335 C
234.72000 540.89093 234.68003 541.75153 234.78491 542.44828 C
234.91587 542.67222 235.93578 542.82274 236.20082 542.68469 C
236.37345 542.40350 236.55430 542.12712 236.73855 541.85357 C
237.17055 541.21153 237.71565 540.66104 238.53572 541.12592 C
239.04227 541.41335 239.74554 541.77987 240.01625 542.31420 C
240.40375 543.07899 239.70926 543.74825 239.30391 544.31490 C
239.15934 544.58362 239.67326 545.63329 239.96863 545.84362 C
240.16592 545.79742 240.36378 545.75461 240.56249 545.71408 C
241.24847 545.57348 242.11672 545.32517 242.51499 546.15260 C
243.04422 547.25443 243.07795 548.81575 241.77600 549.05953 C
241.76863 549.06094 L
241.30205 549.14825 L
240.75496 549.23896 L
240.54406 549.47452 240.31106 550.46494 240.36151 550.81247 C
240.81817 551.10813 L
241.40636 551.49647 242.18419 551.94151 241.86189 552.80863 C
241.55206 553.64145 240.66283 554.99301 239.60494 554.49921 C
239.15991 554.29172 238.77893 553.98331 238.39087 553.68822 C
238.06857 553.71798 237.21732 554.27301 237.05405 554.55619 C
237.16233 555.06019 L
237.27487 555.61181 237.49285 556.19802 237.10819 556.71109 C
@c
F

@rax %Note: Object
230.73392 541.26652 250.15124 549.92381 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 null ] set_fill_color
240.50296 547.52202 m
243.67124 547.52202 L
243.67124 547.38085 L
243.73276 547.41175 243.79569 547.44066 243.85975 547.46759 C
244.15143 547.58721 244.45956 547.64362 244.77420 547.64362 C
245.18580 547.64362 245.59398 547.56567 245.95257 547.35789 C
246.08494 547.28164 246.20513 547.19093 246.31370 547.08860 C
246.43814 547.18951 246.57392 547.27795 246.72076 547.35392 C
247.10627 547.55320 247.52409 547.64362 247.95751 547.64362 C
248.60268 547.64362 249.18803 547.43046 249.60274 546.92447 C
250.02482 546.40970 250.15124 545.73449 250.15124 545.08507 C
250.15124 541.38813 L
246.94072 541.38813 L
246.94072 544.83676 L
246.94072 544.86085 246.93987 544.90195 246.93704 544.94192 C
246.91748 544.87474 246.91294 544.78176 246.91294 544.73329 C
246.91294 541.38813 L
243.69902 541.38813 L
243.69902 544.78687 L
243.69902 544.81521 243.69761 544.86652 243.69279 544.91726 C
243.67550 544.84186 243.67124 544.74406 243.67124 544.69502 C
243.67124 541.38813 L
234.29395 541.38813 L
234.29395 541.44765 L
234.00964 541.33143 233.71087 541.26652 233.40076 541.26652 C
232.88712 541.26652 232.39814 541.39209 231.96501 541.67216 C
231.53499 541.94995 231.22233 542.33688 231.02135 542.80658 C
230.81074 543.29754 230.73392 543.83556 230.73392 544.36677 C
230.73392 544.93710 230.83313 545.49978 231.07550 546.01852 C
231.30340 546.50608 231.63761 546.91370 232.08831 547.20935 C
232.53506 547.50217 233.03707 547.64362 233.57083 547.64362 C
233.81490 547.64362 234.05839 547.61074 234.29395 547.53619 C
234.29395 549.92381 L
237.50787 549.92381 L
237.50787 549.13918 L
237.58044 549.24491 237.66860 549.34243 237.77206 549.43030 C
238.11392 549.72085 238.54082 549.83197 238.98246 549.83197 C
239.42324 549.83197 239.84504 549.72028 240.18605 549.43455 C
240.53301 549.14740 240.71102 548.75310 240.71102 548.30353 C
240.71102 548.01694 240.64129 547.75219 240.50296 547.52202 C
@c
234.33732 544.60687 m
234.33732 544.70324 234.32683 544.87106 234.26277 544.95156 c
234.23698 544.98387 234.21458 544.98643 234.17263 544.98643 c
234.13124 544.98643 234.11282 544.95609 234.09014 544.92321 c
233.99717 544.78715 233.97789 544.57597 233.97789 544.41666 c
233.97789 544.33361 233.99376 543.99373 234.06831 543.93364 C
234.08220 543.92542 234.12756 543.92372 234.14258 543.92372 c
234.19361 543.92372 234.20891 543.93392 234.23924 543.97531 c
234.32343 544.09096 234.33732 544.33928 234.33732 544.47506 c
234.33732 544.60687 L
@c
F

@rax %Note: Object
231.30085 541.83345 249.58431 549.35688 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.76 0.28 0.00 0.24 null ] set_fill_color
234.86088 541.95506 m
234.86088 542.53672 L
234.84076 542.53672 L
234.67408 542.31846 234.45921 542.14668 234.19077 542.02167 c
233.92403 541.89496 233.66098 541.83345 233.40076 541.83345 c
232.97414 541.83345 232.59742 541.93833 232.27257 542.14838 c
231.94743 542.35843 231.70422 542.65181 231.54236 543.02995 c
231.38079 543.40668 231.30085 543.85342 231.30085 544.36677 c
231.30085 544.89827 231.39751 545.36854 231.58913 545.77843 c
231.78076 546.18831 232.05090 546.50665 232.39928 546.73512 c
232.74737 546.96331 233.13912 547.07669 233.57083 547.07669 c
233.77578 547.07669 233.96570 547.04835 234.14088 546.98995 c
234.31408 546.93014 234.46573 546.85162 234.59414 546.75184 c
234.72255 546.65348 234.80589 546.55512 234.84076 546.45676 C
234.86088 546.45676 L
234.86088 549.35688 L
236.94094 549.35688 L
236.94094 541.95506 L
234.86088 541.95506 L
@c
234.90425 544.60687 m
234.90425 544.90677 234.83906 545.13836 234.70583 545.30504 c
234.57430 545.47002 234.39572 545.55335 234.17263 545.55335 c
233.94756 545.55335 233.76416 545.45017 233.62243 545.24353 c
233.48098 545.03688 233.41096 544.76164 233.41096 544.41666 c
233.41096 543.70998 233.65417 543.35679 234.14258 543.35679 c
234.37417 543.35679 234.55928 543.45175 234.69761 543.64167 c
234.83594 543.83187 234.90425 544.10995 234.90425 544.47506 c
234.90425 544.60687 l
@c
240.14409 548.30353 m
240.14409 548.01014 240.03751 547.77175 239.82406 547.59005 c
239.61090 547.40665 239.33083 547.31679 238.98246 547.31679 c
238.64400 547.31679 238.36564 547.41005 238.14907 547.59997 c
237.93250 547.78847 237.82564 548.02346 237.82564 548.30353 c
237.82564 548.58841 237.93080 548.82170 238.13915 548.99830 c
238.34920 549.17688 238.63068 549.26504 238.98246 549.26504 c
239.33083 549.26504 239.61090 549.17688 239.82406 548.99830 c
240.03751 548.82170 240.14409 548.58841 240.14409 548.30353 c
@c
237.94243 541.95506 m
237.94243 546.95509 L
240.02249 546.95509 L
240.02249 541.95506 L
237.94243 541.95506 L
@c
247.50765 541.95506 m
247.50765 544.83676 l
247.50765 545.07685 247.46598 545.25685 247.37924 545.37506 c
247.29250 545.49496 247.15276 545.55335 246.95603 545.55335 c
246.76441 545.55335 246.61417 545.48164 246.50759 545.33679 c
246.39931 545.19165 246.34602 544.99011 246.34602 544.73329 c
246.34602 541.95506 L
244.26595 541.95506 L
244.26595 544.78687 l
244.26595 545.29852 244.09247 545.55335 243.74438 545.55335 c
243.53263 545.55335 243.37247 545.47994 243.26589 545.33169 c
243.15761 545.18343 243.10431 544.97169 243.10431 544.69502 c
243.10431 541.95506 L
241.02425 541.95506 L
241.02425 546.95509 L
243.10431 546.95509 L
243.10431 546.16337 L
243.12416 546.16337 L
243.20098 546.30340 243.32598 546.44683 243.49748 546.59169 c
243.66756 546.73682 243.86088 546.85332 244.07603 546.94346 c
244.29090 547.03162 244.52249 547.07669 244.77420 547.07669 c
245.12939 547.07669 245.42759 547.00668 245.66939 546.86665 c
245.91260 546.72661 246.11584 546.50494 246.27770 546.20334 C
246.45430 546.48340 246.68759 546.69855 246.98098 546.85020 c
247.27436 547.00186 247.59921 547.07669 247.95751 547.07669 c
248.48107 547.07669 248.88444 546.90661 249.16422 546.56504 c
249.44428 546.22346 249.58431 545.72995 249.58431 545.08507 c
249.58431 541.95506 L
247.50765 541.95506 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
