%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 225 540 254 569
%%LanguageLevel: 1
%%DocumentProcessColors: Magenta Yellow Black
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 1 def
/CorelIsEPS true def
/wCorel3Dict 300 dict def wCorel3Dict begin
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def/$fmp 50 def/@dlt_hsb{$fco nff ge
{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/kdb xd nff $fco sub div
/kdb2 xd sub neg 2 div dup $fco div/kds xd nff $fco sub div/kds2 xd sub neg dup
0 eq{pop $frb 2 eq{0.99}{-0.99}ifelse}if dup $frb 2 eq exch 0 lt and{1 add}if
dup $frb 1 eq exch 0 gt and{1 sub}if 2 div dup $fco div/kdh xd nff $fco sub div
/kdh2 xd}bd/@dlt{$fse $fss sub dup/nff xd $fmp mul $fmp add 100 div round cvi
dup 0 le{pop 1}if/$fco xd/$fi 0 def $frb dup 1 eq exch 2 eq or{grad_color_from
devicen_to_cmyk cmyk2rgb rgb2hsb 3 copy/myb xd/mys xd/myh xd grad_color_to
devicen_to_cmyk cmyk2rgb rgb2hsb 3 1 roll 4 1 roll 5 1 roll @dlt_hsb}{
bGradDeviceN{@dlt_devicen}{@dlt_cmyk}ifelse}ifelse}bd/@dlt_cmyk{$fmp 50 eq{
grad_color_to 1 get grad_color_from 1 get sub nff div/dC xd grad_color_to 2 get
grad_color_from 2 get sub nff div/dM xd grad_color_to 3 get grad_color_from 3
get sub nff div/dY xd grad_color_to 4 get grad_color_from 4 get sub nff div/dK
xd}{$fco nff ge{/$fco nff 1 sub def}if grad_color_to 1 get grad_color_from 1
get sub 2 div $fco div/dC xd grad_color_to 2 get grad_color_from 2 get sub 2
div $fco div/dM xd grad_color_to 3 get grad_color_from 3 get sub 2 div $fco div
/dY xd grad_color_to 4 get grad_color_from 4 get sub 2 div $fco div/dK xd
/co_steps nff $fco sub def grad_color_to 1 get grad_color_from 1 get sub 2 div
co_steps div/dC2 xd grad_color_to 2 get grad_color_from 2 get sub 2 div
co_steps div/dM2 xd grad_color_to 3 get grad_color_from 3 get sub 2 div
co_steps div/dY2 xd grad_color_to 4 get grad_color_from 4 get sub 2 div
co_steps div/dK2 xd}ifelse}bd/@dlt_devicen{$fmp 50 eq{grad_color_from length 6
idiv dup/devicen_deltas exch array def 0 1 3 -1 roll 1 sub{dup dup
grad_color_to exch get 2 1 roll grad_color_from exch get sub nff div
devicen_deltas 3 1 roll put}for}{$fco nff ge{/$fco nff 1 sub def}if
grad_color_from length 6 idiv dup dup/devicen_deltas exch array def
/devicen_deltas2 exch array def 0 1 3 -1 roll 1 sub{dup dup dup grad_color_to
exch get exch grad_color_from exch get sub 2 div dup 3 1 roll $fco div
devicen_deltas 3 1 roll put nff $fco sub div devicen_deltas2 3 1 roll put}for
}ifelse}bd/@ffnxt{/$fi $fi 1 add def $frb dup 1 eq exch 2 eq or{pop[1.0 myh mys
myb $fi $fco lt{kdb add 3 1 roll kds add 3 1 roll kdh add 3 1 roll}{kdb2 add 3
1 roll kds2 add 3 1 roll kdh2 add 3 1 roll}ifelse 3 copy/myb xd/mys xd/myh xd
hsb2rgb rgb2cmyk null]}{bGradDeviceN{dup length 6 idiv 1 sub 0 1 3 -1 roll{
exch dup dup 4 -1 roll dup $fi $fco lt $fmp 50 eq or{devicen_deltas exch get}{
devicen_deltas2 exch get}ifelse 4 1 roll dup 3 1 roll get 4 -1 roll add put
}for}{$fi $fco lt $fmp 50 eq or{[exch aload pop pop dK add 4 1 roll dY add 4 1
roll dM add 4 1 roll dC add 4 1 roll null]}{[exch aload pop pop dK2 add 4 1
roll dY2 add 4 1 roll dM2 add 4 1 roll dC2 add 4 1 roll null]}ifelse}ifelse}
ifelse}bd/@ffcol{set_fill_color}bd/@ff_strip_init{/$fil 0 def $frb dup 1 eq
exch 2 eq or{/strip_color[1.0 grad_color_from devicen_to_cmyk null]def}{
/strip_color grad_color_from def}ifelse}bd/@ftl{1 index 4 index sub dup $pad
mul dup/$pdw xd 2 mul sub $fst div/$wid xd 2 index sub/$hei xd pop Tl @dlt
@ff_strip_init strip_color @ffcol $fss 0 eq{n 0 0 m 0 $hei l $pdw $hei l $pdw 0
l @cp F}if $fss $wid mul $pdw add 0 Tl nff{n 0 0 m 0 $hei l $wid $hei l $wid 0
l @cp strip_color @ffcol F $wid 0 Tl strip_color @ffnxt/strip_color exch def}
repeat n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp strip_color @ffcol F}bd/@ftrs
{1 index 4 index sub dup $rox mul/$row xd 2 div 1 index 4 index sub dup $roy
mul/$roh xd 2 div 2 copy dup mul exch dup mul add sqrt $row dup mul $roh dup
mul add sqrt add dup/$hei xd $fst div/$wid xd 4 index add $roh add exch 5 index
add $row add exch Tl $fan rotate pop pop pop pop @dlt @ff_strip_init
strip_color @ffcol $fss 0 eq{$fty 3 eq{$hei dup neg dup m 2 mul @sqr}{0 0 m 0 0
$hei 0 360 arc}ifelse F}if 1.0 $pad 2 mul sub dup scale $hei $fss $wid mul sub
/$hei xd nff{$fty 3 eq{n $hei dup neg dup m 2 mul @sqr}{n 0 0 m 0 0 $hei 0 360
arc}ifelse strip_color @ffcol F/$hei $hei $wid sub def strip_color @ffnxt
/strip_color exch def}repeat}bd/@ftc{1 index 4 index sub dup $rox mul/$row xd 2
div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul exch dup mul
add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst div/$wid xd 4
index add $roh add exch 5 index add $row add exch Tl pop pop pop pop @dlt
@ff_strip_init strip_color @ffcol $fss 0 eq{F}{n}ifelse/$dang 180 $fst 1 sub
div def/$sang $dang -2 div 180 add def/$eang $dang 2 div 180 add def/$sang
$sang $dang $fss mul add def/$eang $eang $dang $fss mul add def/$sang $eang
$dang sub def nff{n 0 0 m 0 0 $hei $sang $fan add $eang $fan add arc
strip_color @ffcol F 0 0 m 0 0 $hei $eang neg $fan add $sang neg $fan add arc F
/$sang $eang def/$eang $eang $dang add def strip_color @ffnxt/strip_color exch
def}repeat}bd/@fstAdjust{72 0 matrix defaultmatrix dtransform exch dup mul exch
dup mul add sqrt currentscreen pop pop div dup mul 1 add cvi 2 256 InRange $fsc
1 sub dup 0 le{pop 1}if mul/opt$fst xd AutoSteps dup 1 eq exch 3 eq or{opt$fst
dup dup $fst dup 3 1 roll div exch 3 -1 roll gt{/$adj xd/$fst xd}{pop pop}
ifelse}if AutoSteps dup 2 eq exch 3 eq or{opt$fst dup dup $fst dup 3 1 roll div
exch 3 -1 roll lt{/$adj xd/$fst xd}{pop pop}ifelse}if}bd/@ff{/old$fst $fst def
/$adj 1 def/$fss 0 def $o 1 eq setoverprint grad_use_shading_dict{
CorelShfillDoFill}{AutoSteps 0 gt{@fstAdjust}if 1 1 $fsc 1 sub{dup 1 sub $fsa
exch 2 mul get/grad_color_from exch def dup $fsa exch 2 mul get/grad_color_to
exch def $fsa exch 2 mul 1 add get $adj mul cvi $fss add/$fse xd bGradDeviceN{
/grad_color_from[grad_color_from aload pop tint_params aload pop sNamesDeviceN
aload pop]bind def/grad_color_to[grad_color_to aload pop tint_params aload pop
sNamesDeviceN aload pop]bind def}if @sv $ctm setmatrix wclip Bbllx Bblly Bburx
Bbury $fty 2 eq{@ftc}{1 index 3 index m 2 copy l 3 index 1 index l 3 index 3
index l @cp $fty dup 1 eq exch 3 eq or{@ftrs}{pop pop pop pop $fan rotate
pathbbox @ftl}ifelse}ifelse @rs/$fss $fse def}for @np}ifelse/$fst old$fst def}
bd/set_gradient{/$fil 2 def/bGradDeviceN xd/$fmp xd/$roy xd/$rox xd/$pad xd
/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd/$fst xd/$fsc xd/$fsa xd}bd
/grad_use_shading_dict{$fty 0 eq $fty 1 eq or $fty 3 eq or level3 and $frb 1 ne
and $frb 2 ne and}bd
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/CorelShfillMapColor{SepMode_5 0 eq{bShfillDeviceN not{[exch aload pop pop
@tc_5]}if}{bShfillDeviceN{[exch aload pop tint_params aload pop sNamesDeviceN
aload pop]}if[exch separate_color aload pop pop @tc_5 SepsColor not{4 1 roll
pop pop pop 1 exch sub}if]}ifelse}bd/CorelShfillGetColorSpace{SepMode_5 0 eq
bShfillDeviceN and{[/DeviceN sNamesDeviceN/DeviceCMYK{tint_params
CorelTintTransformFunction}]}{SepMode_5 0 eq{/DeviceCMYK}{SepsColor{
/DeviceCMYK}{/DeviceGray}ifelse}ifelse}ifelse}bd/CorelShfillDoLinearParams{
flattenpath pathbbox 2 index add 2 div/$y1 xd/$x1 xd $y1/$y0 xd pop/$x0 xd $x1
$x0 sub $pad mul/$pdw xd $x1 $pdw sub/$x1 xd $x0 $pdw add/$x0 xd $x0 $x1 add 2
div/$xmid xd $y0/$ymid xd $xmid $x1 sub/$x1 xd $x1 neg/$x0 xd 0/$y0 xd 0/$y1 xd
$xmid $ymid translate/Coords[$x1 $y1 $x0 $y0]}def
/CorelShfillDoRadialSquareParams{flattenpath pathbbox/$y1 xd/$x1 xd/$y0 xd/$x0
xd $x1 $x0 sub/$width xd $y1 $y0 sub/$height xd $rox $width mul/$row xd $roy
$height mul/$roh xd $x0 $width 2 div add/$x0 xd $y0 $height 2 div add/$y0 xd
$x0 $row add/$x0 xd $y0 $roh add/$y0 xd $x0/$x1 xd $y0/$y1 xd $width dup mul
$height dup mul add sqrt 2 div $row dup mul $roh dup mul add sqrt add 1 $pad 2
mul sub mul/$rad0 xd 0/$rad1 xd}def/CorelShfillDoRadialParams{
CorelShfillDoRadialSquareParams/Coords[$x0 $y0 $rad0 $x1 $y1 $rad1]}def
/CorelShfillDoSquareParams{CorelShfillDoRadialSquareParams $x0 $y0 translate
$rad0/$x1 xd $x1 neg/$x0 xd $rad0/$y1 xd $y1 neg/$y0 xd/DataSource[0 0 0 1 0
$x1 $y1 0 0 $x0 $y1 0 2 $x0 $y0 0 2 $x1 $y0 0 2 $x1 $y1 0]}def
/CorelShfillFunction{<< $fty 0 eq{/ShadingType 2}{$fty 1 eq{/ShadingType 3}{
$fty 3 eq{/ShadingType 4}if}ifelse}ifelse/ColorSpace CorelShfillGetColorSpace
/Domain[0 1]$fty 0 eq{CorelShfillDoLinearParams}{$fty 1 eq{
CorelShfillDoRadialParams}{$fty 3 eq{CorelShfillDoSquareParams}if}ifelse
}ifelse/Function <</FunctionType 3/Domain[0 1]/Functions[/dMidPointPS 0.5 log
$fmp 100 div log div def 1 1 $fsc 1 sub{/nColor exch def <</FunctionType 2
/Domain[0 1]/N dMidPointPS/C0 $fsa nColor 1 sub 2 mul get CorelShfillMapColor
/C1 $fsa nColor 2 mul get CorelShfillMapColor >>}for]/Encode[$fsc 1 sub{0 1}
repeat]/Bounds[$fsc 2 gt{1 1 $fsc 2 sub{/nColor exch def/nBandPos 0 def 0 1
nColor{dup nColor le{$fsa exch 2 mul 1 add get nBandPos add/nBandPos exch def
}if}for nBandPos $fst div}for}if]>> $pad 0 gt{/Extend[true true]}{/Extend
[false false]}ifelse >> shfill}bd/CorelShfillDoFill{$ctm setmatrix wclip @gs
$fty 3 eq $pad 0 gt and{bGradDeviceN{$fsa 0 get tint_params sNamesDeviceN
create_colorarray_from_devicen_params set_fill_color}{$fsa 0 get set_fill_color
}ifelse F}if @gr Bbllx Bblly Bburx Bbury 1 index 3 index m 2 copy l 3 index 1
index l 3 index 3 index l @cp pop pop pop pop $fan rotate $o 1 eq setoverprint
/bShfillDeviceN bGradDeviceN def CorelShfillFunction}bd/CorelShfillDoMesh{$o 1
eq setoverprint shfill}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
1.00 setflat
/$fst 2000 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
227.40180 540.96718 241.92085 547.76920 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.00 0.13 0.34 0.66 null ]  0
[ 1.00 0.00 0.28 0.76 0.24 null ]  999
] 2 999 0 20.55 0 0.11 0 0 50 false set_gradient
228.70517 547.76920 m
228.93591 546.94006 228.85455 545.97402 228.29754 545.61203 C
228.12803 545.50233 227.45197 545.15395 227.40293 544.95014 C
227.37912 544.85093 227.74649 544.39994 227.80091 544.32113 C
227.85449 544.24233 228.14249 543.73521 228.24425 543.72132 C
228.48661 543.68901 229.16466 544.29789 229.35912 544.43735 C
230.68091 545.39263 232.53477 543.90161 232.21247 542.40378 C
232.16882 542.20167 231.91540 541.41137 232.03616 541.25036 C
232.12205 541.13613 232.81370 541.07688 232.95657 541.04712 C
233.03650 541.03039 233.42485 540.93345 233.50167 540.97937 C
233.75055 541.25518 233.77465 542.21046 233.83219 542.59172 C
234.00198 543.72387 236.46784 544.09578 237.00189 543.22157 C
237.17395 542.94038 237.35424 542.66485 237.53792 542.39159 C
237.66066 542.20932 237.83046 541.83402 238.06006 541.96413 C
238.32170 542.11266 239.02072 542.48202 239.15650 542.75017 C
239.23276 542.90013 238.60233 543.63912 238.52041 543.75364 C
237.88148 544.64400 239.06296 547.05118 240.10498 546.80173 C
240.32069 546.74986 240.53783 546.70280 240.75553 546.65802 C
240.85786 546.63704 241.57984 546.43238 241.64646 546.57014 C
241.75587 546.79805 241.97471 547.38595 241.90809 547.76920 C
237.06425 547.76920 L
236.67307 546.55937 235.53865 545.68403 234.19871 545.68403 c
232.85934 545.68403 231.72321 546.55937 231.33203 547.76920 C
228.70517 547.76920 L
@c
F

@rax %Note: Object
236.91402 560.59002 251.38942 567.38863 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.00 0.13 0.34 0.66 null ]  0
[ 1.00 0.00 0.28 0.76 0.24 null ]  999
] 2 999 0 20.55 0 0.11 0 0 50 false set_gradient
249.97181 560.59030 m
249.74476 561.37776 249.75808 562.27068 250.18328 562.53373 C
250.36186 562.64428 250.53817 562.75852 250.71335 562.87474 C
250.80350 562.93427 251.44214 563.28350 251.38573 563.43572 C
251.30126 563.66277 250.74000 564.72917 250.43924 564.58913 C
250.05175 564.40828 249.67984 564.09392 249.33798 563.83654 C
248.55335 563.24608 246.30491 564.71471 246.52460 565.66006 C
246.56769 565.84488 246.60737 566.03055 246.64535 566.21622 C
246.67569 566.36504 246.85739 566.97250 246.76781 567.09213 C
246.57562 567.28318 245.55855 567.44674 245.29805 567.36907 C
245.21839 567.31380 245.15688 566.87584 245.14129 566.78854 C
245.09650 566.54419 245.05398 566.29899 245.01458 566.05323 C
244.82806 564.89159 242.18986 564.50976 241.62945 565.39361 C
241.45654 565.66715 241.27654 565.93616 241.09398 566.20290 C
240.75213 566.70265 240.03836 565.94069 239.74384 565.69975 C
239.58992 565.57446 239.68148 565.45285 239.78154 565.30658 C
240.25039 564.63477 L
240.88309 563.74583 239.42069 561.40214 238.25622 561.60397 C
237.99345 561.64961 237.74854 561.74910 237.49427 561.79644 C
237.42482 561.80948 237.26353 561.83357 237.20258 561.77717 C
237.05320 561.63912 236.97411 560.92394 236.93187 560.71247 C
236.92592 560.68214 236.91855 560.63735 236.91402 560.59030 C
241.76069 560.59030 L
242.15329 561.79729 243.28828 562.67065 244.62595 562.67065 c
245.96362 562.67065 247.09691 561.79729 247.48951 560.59030 C
249.97181 560.59030 L
@c
F

@rax %Note: Object
227.26233 540.00652 251.53625 568.35298 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.35 0.28 0.56 null ] set_fill_color
251.53285 540.00652 m
238.24063 540.00652 L
238.48753 540.04564 238.74378 540.13606 239.01109 540.28743 C
239.72598 540.69307 240.48765 541.11231 240.87600 541.87852 C
240.91370 541.95506 L
249.58431 541.95506 L
249.58431 547.76920 L
251.53625 547.76920 L
251.53483 545.18173 251.53285 542.59398 251.53285 540.00652 C
@c
237.67710 540.00652 m
235.17836 540.00652 L
235.52787 540.54397 235.59619 541.11430 235.66564 541.72800 C
235.75550 541.58967 235.84677 541.45219 235.93918 541.31528 C
236.39613 540.63609 236.98460 540.11820 237.67710 540.00652 C
@c
230.56328 540.00652 m
227.26233 540.00652 L
227.26233 542.04350 L
227.45991 541.93011 227.69376 541.85046 227.98857 541.81106 C
228.47357 541.74557 228.86164 541.83231 229.21115 541.99899 C
229.21115 541.95506 L
230.14148 541.95506 L
230.02469 541.32180 230.02044 540.72624 230.49354 540.09468 C
230.51650 540.06406 230.54003 540.03487 230.56328 540.00652 C
@c
227.26233 560.59030 m
227.26233 568.35298 L
241.41260 568.35298 L
241.52712 568.23846 L
240.53698 568.56104 239.44110 567.94110 238.52466 567.19276 C
238.24006 566.96060 238.03597 566.69216 237.90643 566.40444 C
229.21115 566.40444 L
229.21115 560.59030 L
227.26233 560.59030 L
@c
F

@rax %Note: Object
241.76154 560.59030 247.49008 562.67065 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.35 0.28 0.56 null ] set_fill_color
244.62595 562.67065 m
245.96419 562.67065 247.09776 561.79786 247.49008 560.59030 C
246.44069 560.59030 L
246.10252 561.24879 245.41710 561.69865 244.62595 561.69865 c
243.83480 561.69865 243.14939 561.24879 242.81121 560.59030 C
241.76154 560.59030 L
242.15386 561.79786 243.28772 562.67065 244.62595 562.67065 c
@c
F

@rax %Note: Object
235.94598 560.59030 252.36454 568.35326 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.35 0.28 0.56 null ] set_fill_color
241.62945 565.39361 m
242.18986 564.50976 244.82806 564.89159 245.01458 566.05323 C
245.05398 566.29899 245.09650 566.54419 245.14129 566.78854 C
245.15688 566.87584 245.21839 567.31380 245.29805 567.36907 C
245.55855 567.44674 246.57562 567.28318 246.76781 567.09213 C
246.85739 566.97250 246.67569 566.36504 246.64535 566.21622 C
246.60737 566.03055 246.56769 565.84488 246.52460 565.66006 C
246.30491 564.71471 248.55335 563.24608 249.33798 563.83654 C
249.67984 564.09392 250.05175 564.40828 250.43924 564.58913 C
250.74000 564.72917 251.30126 563.66277 251.38573 563.43572 C
251.44214 563.28350 250.80350 562.93427 250.71335 562.87474 C
250.53817 562.75852 250.36186 562.64428 250.18328 562.53373 C
249.75808 562.27039 249.74447 561.37833 249.97209 560.59030 C
250.99058 560.59030 L
250.85452 560.98375 250.75361 561.53424 250.78876 561.77546 C
251.24542 562.07112 L
251.83332 562.45975 252.61143 562.90479 252.28913 563.77162 C
251.97902 564.60472 251.08980 565.95600 250.03191 565.46249 C
249.58687 565.25499 249.20617 564.94630 248.81783 564.65150 C
248.49553 564.68098 247.64457 565.23628 247.48129 565.51946 C
247.58929 566.02346 L
247.70183 566.57480 247.91981 567.16129 247.53515 567.67436 C
247.13065 568.21351 245.65238 568.48054 245.02677 568.29402 C
244.39578 568.10693 244.29231 567.51137 244.19282 566.96088 C
244.14690 566.70973 244.10353 566.45830 244.06299 566.20602 C
243.91814 565.94693 242.71483 565.77600 242.42485 565.93928 C
242.25165 566.21169 242.07194 566.48041 241.88967 566.74715 C
241.06139 567.95698 239.93802 567.10290 239.13439 566.44639 C
238.55924 565.97726 238.59468 565.33465 238.98643 564.76205 C
239.44620 564.10214 L
239.49638 563.74101 238.76306 562.55301 238.41893 562.55357 C
238.16693 562.59751 237.92485 562.69644 237.67143 562.74378 C
236.28841 563.00287 236.18069 561.87184 235.98652 560.90098 C
235.96441 560.78986 235.95165 560.68668 235.94598 560.59030 C
236.91402 560.59030 L
236.91827 560.63820 236.92564 560.68186 236.93187 560.71247 C
236.97411 560.92394 237.05320 561.63912 237.20258 561.77717 C
237.26353 561.83357 237.42482 561.80948 237.49427 561.79644 C
237.74854 561.74910 237.99345 561.64961 238.25622 561.60397 C
239.42069 561.40214 240.88309 563.74583 240.25039 564.63477 C
239.78154 565.30658 L
239.68148 565.45285 239.58992 565.57446 239.74384 565.69975 C
240.03836 565.94069 240.75213 566.70265 241.09398 566.20290 C
241.27654 565.93616 241.45654 565.66715 241.62945 565.39361 C
@c
F

@rax %Note: Object
231.33345 545.68403 237.06425 547.76920 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.35 0.28 0.56 null ] set_fill_color
237.06425 547.76920 m
236.67307 546.55937 235.53865 545.68403 234.19871 545.68403 c
232.85934 545.68403 231.72463 546.55937 231.33345 547.76920 C
232.38255 547.76920 L
232.72016 547.10872 233.40643 546.65603 234.19871 546.65603 c
234.99156 546.65603 235.67754 547.10872 236.01515 547.76920 C
237.06425 547.76920 L
@c
F

@rax %Note: Object
226.43603 540.00680 242.85770 547.76920 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.35 0.28 0.56 null ] set_fill_color
241.90809 547.76920 m
241.97471 547.38595 241.75587 546.79805 241.64646 546.57014 C
241.57984 546.43238 240.85786 546.63704 240.75553 546.65802 C
240.53783 546.70280 240.32069 546.74986 240.10498 546.80173 C
239.06296 547.05118 237.88148 544.64400 238.52041 543.75364 C
238.60233 543.63912 239.23276 542.90013 239.15650 542.75017 C
239.02072 542.48202 238.32170 542.11266 238.06006 541.96413 C
237.83046 541.83402 237.66066 542.20932 237.53792 542.39159 C
237.35424 542.66485 237.17395 542.94038 237.00189 543.22157 C
236.46784 544.09578 234.00198 543.72387 233.83219 542.59172 C
233.77465 542.21046 233.75055 541.25518 233.50167 540.97937 C
233.42485 540.93345 233.03650 541.03039 232.95657 541.04712 C
232.81370 541.07688 232.12205 541.13613 232.03616 541.25036 C
231.91540 541.41137 232.16882 542.20167 232.21247 542.40378 C
232.53477 543.90161 230.68091 545.39263 229.35912 544.43735 C
229.16466 544.29789 228.48661 543.68901 228.24425 543.72132 C
228.14249 543.73521 227.85449 544.24233 227.80091 544.32113 C
227.74649 544.39994 227.37912 544.85093 227.40293 544.95014 C
227.45197 545.15395 228.12803 545.50233 228.29754 545.61203 C
228.85455 545.97402 228.93732 546.94006 228.70658 547.76920 C
227.69235 547.76920 L
227.86328 547.29836 227.94973 546.57751 227.77172 546.41962 C
227.26913 546.09420 226.62312 545.82917 226.46608 545.17521 C
226.32463 544.58561 226.70986 544.20775 227.00551 543.77660 C
227.30088 543.34431 227.51291 542.84683 228.11641 542.76633 C
228.83811 542.66910 229.39512 543.27657 229.92236 543.65584 C
230.50488 544.07650 231.41225 543.26608 231.26995 542.60646 C
231.13672 541.98680 230.82746 541.25660 231.26485 540.67238 C
231.64583 540.16469 232.22353 540.21572 232.75956 540.10346 C
233.27490 539.99603 233.80866 539.88236 234.21657 540.33335 C
234.72000 540.89093 234.68003 541.75153 234.78491 542.44828 C
234.91587 542.67222 235.93578 542.82274 236.20082 542.68469 C
236.37345 542.40350 236.55430 542.12712 236.73855 541.85357 C
237.17055 541.21153 237.71565 540.66104 238.53572 541.12592 C
239.04227 541.41335 239.74554 541.77987 240.01625 542.31420 C
240.40375 543.07899 239.70926 543.74825 239.30391 544.31490 C
239.15934 544.58362 239.67326 545.63329 239.96863 545.84362 C
240.16592 545.79742 240.36378 545.75461 240.56249 545.71408 C
241.24847 545.57348 242.11672 545.32517 242.51499 546.15260 C
242.75480 546.65206 242.89228 547.24649 242.85033 547.76920 C
241.90809 547.76920 L
@c
F

@rax %Note: Object
225.22706 548.90249 253.57351 559.45701 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.35 0.28 0.56 null ] set_fill_color
230.87169 549.31890 m
230.39036 549.04054 229.69531 548.90249 228.78822 548.90249 c
227.72721 548.90249 226.86860 549.22224 226.21238 549.86712 c
225.55644 550.50917 225.22706 551.33802 225.22706 552.35537 c
225.22706 553.52920 225.57912 554.45272 226.28154 555.12935 c
226.98567 555.80598 227.92762 556.14444 229.10598 556.14444 c
229.91839 556.14444 230.50800 556.03616 230.87169 555.82214 C
230.87169 554.01279 L
230.42721 554.34671 229.93002 554.51225 229.38208 554.51225 c
228.76980 554.51225 228.28649 554.33509 227.92762 553.97594 c
227.57046 553.61934 227.39102 553.12668 227.39102 552.49597 c
227.39102 551.88567 227.56365 551.40491 227.90438 551.05682 c
228.24482 550.70731 228.71679 550.53439 229.31320 550.53439 c
229.84498 550.53439 230.36287 550.70022 230.87169 551.03414 C
230.87169 549.31890 L
@c
235.55849 548.90249 m
234.40734 548.90249 233.50280 549.22450 232.84431 549.86910 c
232.18611 550.51370 231.85672 551.39102 231.85672 552.49597 c
231.85672 553.63776 232.19745 554.53294 232.88117 555.17754 c
233.56488 555.82214 234.48784 556.14444 235.65288 556.14444 c
236.79893 556.14444 237.69921 555.82214 238.35061 555.17754 c
239.00202 554.53294 239.32913 553.67887 239.32913 552.61786 c
239.32913 551.47124 238.99294 550.56444 238.32085 549.89915 c
237.64876 549.23386 236.72778 548.90249 235.55849 548.90249 c
@c
235.61376 554.51225 m
235.10948 554.51225 234.71830 554.33962 234.43965 553.99436 c
234.16101 553.64683 234.02069 553.15644 234.02069 552.52346 c
234.02069 551.19770 234.55701 550.53439 235.62737 550.53439 c
236.64728 550.53439 237.15836 551.21584 237.15836 552.57647 c
237.15836 553.86765 236.64274 554.51225 235.61376 554.51225 c
@c
247.38123 549.07030 m
245.25666 549.07030 L
245.25666 552.90784 l
245.25666 553.97820 244.87427 554.51225 244.11033 554.51225 c
243.74183 554.51225 243.43795 554.37194 243.20098 554.08876 c
242.96173 553.80557 242.84183 553.44444 242.84183 553.00904 c
242.84183 549.07030 L
240.71244 549.07030 L
240.71244 555.97635 L
242.84183 555.97635 L
242.84183 554.88302 L
242.86932 554.88302 L
243.37814 555.72548 244.11713 556.14444 245.08857 556.14444 c
246.61729 556.14444 247.38123 555.19597 247.38123 553.29902 c
247.38123 549.07030 L
@c
253.57351 557.66154 m
253.29997 557.76983 253.03521 557.82482 252.78435 557.82482 c
252.10035 557.82482 251.75962 557.45433 251.75962 556.71080 c
251.75962 555.97635 L
253.33654 555.97635 L
253.33654 554.40425 L
251.75962 554.40425 L
251.75962 549.07030 L
249.63506 549.07030 L
249.63506 554.40425 L
248.47483 554.40425 L
248.47483 555.97635 L
249.63506 555.97635 L
249.63506 556.83269 l
249.63506 557.62016 249.89074 558.25313 250.40381 558.73417 c
250.91490 559.21521 251.61250 559.45701 252.49408 559.45701 c
252.92466 559.45701 253.28608 559.41109 253.57351 559.32123 C
253.57351 557.66154 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
