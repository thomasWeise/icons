%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 205 653 234 683
%%LanguageLevel: 1
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 1 def
/CorelIsEPS true def
/wCorel3Dict 300 dict def wCorel3Dict begin
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def/$fmp 50 def/@dlt_hsb{$fco nff ge
{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/kdb xd nff $fco sub div
/kdb2 xd sub neg 2 div dup $fco div/kds xd nff $fco sub div/kds2 xd sub neg dup
0 eq{pop $frb 2 eq{0.99}{-0.99}ifelse}if dup $frb 2 eq exch 0 lt and{1 add}if
dup $frb 1 eq exch 0 gt and{1 sub}if 2 div dup $fco div/kdh xd nff $fco sub div
/kdh2 xd}bd/@dlt{$fse $fss sub dup/nff xd $fmp mul $fmp add 100 div round cvi
dup 0 le{pop 1}if/$fco xd/$fi 0 def $frb dup 1 eq exch 2 eq or{grad_color_from
devicen_to_cmyk cmyk2rgb rgb2hsb 3 copy/myb xd/mys xd/myh xd grad_color_to
devicen_to_cmyk cmyk2rgb rgb2hsb 3 1 roll 4 1 roll 5 1 roll @dlt_hsb}{
bGradDeviceN{@dlt_devicen}{@dlt_cmyk}ifelse}ifelse}bd/@dlt_cmyk{$fmp 50 eq{
grad_color_to 1 get grad_color_from 1 get sub nff div/dC xd grad_color_to 2 get
grad_color_from 2 get sub nff div/dM xd grad_color_to 3 get grad_color_from 3
get sub nff div/dY xd grad_color_to 4 get grad_color_from 4 get sub nff div/dK
xd}{$fco nff ge{/$fco nff 1 sub def}if grad_color_to 1 get grad_color_from 1
get sub 2 div $fco div/dC xd grad_color_to 2 get grad_color_from 2 get sub 2
div $fco div/dM xd grad_color_to 3 get grad_color_from 3 get sub 2 div $fco div
/dY xd grad_color_to 4 get grad_color_from 4 get sub 2 div $fco div/dK xd
/co_steps nff $fco sub def grad_color_to 1 get grad_color_from 1 get sub 2 div
co_steps div/dC2 xd grad_color_to 2 get grad_color_from 2 get sub 2 div
co_steps div/dM2 xd grad_color_to 3 get grad_color_from 3 get sub 2 div
co_steps div/dY2 xd grad_color_to 4 get grad_color_from 4 get sub 2 div
co_steps div/dK2 xd}ifelse}bd/@dlt_devicen{$fmp 50 eq{grad_color_from length 6
idiv dup/devicen_deltas exch array def 0 1 3 -1 roll 1 sub{dup dup
grad_color_to exch get 2 1 roll grad_color_from exch get sub nff div
devicen_deltas 3 1 roll put}for}{$fco nff ge{/$fco nff 1 sub def}if
grad_color_from length 6 idiv dup dup/devicen_deltas exch array def
/devicen_deltas2 exch array def 0 1 3 -1 roll 1 sub{dup dup dup grad_color_to
exch get exch grad_color_from exch get sub 2 div dup 3 1 roll $fco div
devicen_deltas 3 1 roll put nff $fco sub div devicen_deltas2 3 1 roll put}for
}ifelse}bd/@ffnxt{/$fi $fi 1 add def $frb dup 1 eq exch 2 eq or{pop[1.0 myh mys
myb $fi $fco lt{kdb add 3 1 roll kds add 3 1 roll kdh add 3 1 roll}{kdb2 add 3
1 roll kds2 add 3 1 roll kdh2 add 3 1 roll}ifelse 3 copy/myb xd/mys xd/myh xd
hsb2rgb rgb2cmyk null]}{bGradDeviceN{dup length 6 idiv 1 sub 0 1 3 -1 roll{
exch dup dup 4 -1 roll dup $fi $fco lt $fmp 50 eq or{devicen_deltas exch get}{
devicen_deltas2 exch get}ifelse 4 1 roll dup 3 1 roll get 4 -1 roll add put
}for}{$fi $fco lt $fmp 50 eq or{[exch aload pop pop dK add 4 1 roll dY add 4 1
roll dM add 4 1 roll dC add 4 1 roll null]}{[exch aload pop pop dK2 add 4 1
roll dY2 add 4 1 roll dM2 add 4 1 roll dC2 add 4 1 roll null]}ifelse}ifelse}
ifelse}bd/@ffcol{set_fill_color}bd/@ff_strip_init{/$fil 0 def $frb dup 1 eq
exch 2 eq or{/strip_color[1.0 grad_color_from devicen_to_cmyk null]def}{
/strip_color grad_color_from def}ifelse}bd/@ftl{1 index 4 index sub dup $pad
mul dup/$pdw xd 2 mul sub $fst div/$wid xd 2 index sub/$hei xd pop Tl @dlt
@ff_strip_init strip_color @ffcol $fss 0 eq{n 0 0 m 0 $hei l $pdw $hei l $pdw 0
l @cp F}if $fss $wid mul $pdw add 0 Tl nff{n 0 0 m 0 $hei l $wid $hei l $wid 0
l @cp strip_color @ffcol F $wid 0 Tl strip_color @ffnxt/strip_color exch def}
repeat n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp strip_color @ffcol F}bd/@ftrs
{1 index 4 index sub dup $rox mul/$row xd 2 div 1 index 4 index sub dup $roy
mul/$roh xd 2 div 2 copy dup mul exch dup mul add sqrt $row dup mul $roh dup
mul add sqrt add dup/$hei xd $fst div/$wid xd 4 index add $roh add exch 5 index
add $row add exch Tl $fan rotate pop pop pop pop @dlt @ff_strip_init
strip_color @ffcol $fss 0 eq{$fty 3 eq{$hei dup neg dup m 2 mul @sqr}{0 0 m 0 0
$hei 0 360 arc}ifelse F}if 1.0 $pad 2 mul sub dup scale $hei $fss $wid mul sub
/$hei xd nff{$fty 3 eq{n $hei dup neg dup m 2 mul @sqr}{n 0 0 m 0 0 $hei 0 360
arc}ifelse strip_color @ffcol F/$hei $hei $wid sub def strip_color @ffnxt
/strip_color exch def}repeat}bd/@ftc{1 index 4 index sub dup $rox mul/$row xd 2
div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul exch dup mul
add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst div/$wid xd 4
index add $roh add exch 5 index add $row add exch Tl pop pop pop pop @dlt
@ff_strip_init strip_color @ffcol $fss 0 eq{F}{n}ifelse/$dang 180 $fst 1 sub
div def/$sang $dang -2 div 180 add def/$eang $dang 2 div 180 add def/$sang
$sang $dang $fss mul add def/$eang $eang $dang $fss mul add def/$sang $eang
$dang sub def nff{n 0 0 m 0 0 $hei $sang $fan add $eang $fan add arc
strip_color @ffcol F 0 0 m 0 0 $hei $eang neg $fan add $sang neg $fan add arc F
/$sang $eang def/$eang $eang $dang add def strip_color @ffnxt/strip_color exch
def}repeat}bd/@fstAdjust{72 0 matrix defaultmatrix dtransform exch dup mul exch
dup mul add sqrt currentscreen pop pop div dup mul 1 add cvi 2 256 InRange $fsc
1 sub dup 0 le{pop 1}if mul/opt$fst xd AutoSteps dup 1 eq exch 3 eq or{opt$fst
dup dup $fst dup 3 1 roll div exch 3 -1 roll gt{/$adj xd/$fst xd}{pop pop}
ifelse}if AutoSteps dup 2 eq exch 3 eq or{opt$fst dup dup $fst dup 3 1 roll div
exch 3 -1 roll lt{/$adj xd/$fst xd}{pop pop}ifelse}if}bd/@ff{/old$fst $fst def
/$adj 1 def/$fss 0 def $o 1 eq setoverprint grad_use_shading_dict{
CorelShfillDoFill}{AutoSteps 0 gt{@fstAdjust}if 1 1 $fsc 1 sub{dup 1 sub $fsa
exch 2 mul get/grad_color_from exch def dup $fsa exch 2 mul get/grad_color_to
exch def $fsa exch 2 mul 1 add get $adj mul cvi $fss add/$fse xd bGradDeviceN{
/grad_color_from[grad_color_from aload pop tint_params aload pop sNamesDeviceN
aload pop]bind def/grad_color_to[grad_color_to aload pop tint_params aload pop
sNamesDeviceN aload pop]bind def}if @sv $ctm setmatrix wclip Bbllx Bblly Bburx
Bbury $fty 2 eq{@ftc}{1 index 3 index m 2 copy l 3 index 1 index l 3 index 3
index l @cp $fty dup 1 eq exch 3 eq or{@ftrs}{pop pop pop pop $fan rotate
pathbbox @ftl}ifelse}ifelse @rs/$fss $fse def}for @np}ifelse/$fst old$fst def}
bd/set_gradient{/$fil 2 def/bGradDeviceN xd/$fmp xd/$roy xd/$rox xd/$pad xd
/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd/$fst xd/$fsc xd/$fsa xd}bd
/grad_use_shading_dict{$fty 0 eq $fty 1 eq or $fty 3 eq or level3 and $frb 1 ne
and $frb 2 ne and}bd
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/CorelShfillMapColor{SepMode_5 0 eq{bShfillDeviceN not{[exch aload pop pop
@tc_5]}if}{bShfillDeviceN{[exch aload pop tint_params aload pop sNamesDeviceN
aload pop]}if[exch separate_color aload pop pop @tc_5 SepsColor not{4 1 roll
pop pop pop 1 exch sub}if]}ifelse}bd/CorelShfillGetColorSpace{SepMode_5 0 eq
bShfillDeviceN and{[/DeviceN sNamesDeviceN/DeviceCMYK{tint_params
CorelTintTransformFunction}]}{SepMode_5 0 eq{/DeviceCMYK}{SepsColor{
/DeviceCMYK}{/DeviceGray}ifelse}ifelse}ifelse}bd/CorelShfillDoLinearParams{
flattenpath pathbbox 2 index add 2 div/$y1 xd/$x1 xd $y1/$y0 xd pop/$x0 xd $x1
$x0 sub $pad mul/$pdw xd $x1 $pdw sub/$x1 xd $x0 $pdw add/$x0 xd $x0 $x1 add 2
div/$xmid xd $y0/$ymid xd $xmid $x1 sub/$x1 xd $x1 neg/$x0 xd 0/$y0 xd 0/$y1 xd
$xmid $ymid translate/Coords[$x1 $y1 $x0 $y0]}def
/CorelShfillDoRadialSquareParams{flattenpath pathbbox/$y1 xd/$x1 xd/$y0 xd/$x0
xd $x1 $x0 sub/$width xd $y1 $y0 sub/$height xd $rox $width mul/$row xd $roy
$height mul/$roh xd $x0 $width 2 div add/$x0 xd $y0 $height 2 div add/$y0 xd
$x0 $row add/$x0 xd $y0 $roh add/$y0 xd $x0/$x1 xd $y0/$y1 xd $width dup mul
$height dup mul add sqrt 2 div $row dup mul $roh dup mul add sqrt add 1 $pad 2
mul sub mul/$rad0 xd 0/$rad1 xd}def/CorelShfillDoRadialParams{
CorelShfillDoRadialSquareParams/Coords[$x0 $y0 $rad0 $x1 $y1 $rad1]}def
/CorelShfillDoSquareParams{CorelShfillDoRadialSquareParams $x0 $y0 translate
$rad0/$x1 xd $x1 neg/$x0 xd $rad0/$y1 xd $y1 neg/$y0 xd/DataSource[0 0 0 1 0
$x1 $y1 0 0 $x0 $y1 0 2 $x0 $y0 0 2 $x1 $y0 0 2 $x1 $y1 0]}def
/CorelShfillFunction{<< $fty 0 eq{/ShadingType 2}{$fty 1 eq{/ShadingType 3}{
$fty 3 eq{/ShadingType 4}if}ifelse}ifelse/ColorSpace CorelShfillGetColorSpace
/Domain[0 1]$fty 0 eq{CorelShfillDoLinearParams}{$fty 1 eq{
CorelShfillDoRadialParams}{$fty 3 eq{CorelShfillDoSquareParams}if}ifelse
}ifelse/Function <</FunctionType 3/Domain[0 1]/Functions[/dMidPointPS 0.5 log
$fmp 100 div log div def 1 1 $fsc 1 sub{/nColor exch def <</FunctionType 2
/Domain[0 1]/N dMidPointPS/C0 $fsa nColor 1 sub 2 mul get CorelShfillMapColor
/C1 $fsa nColor 2 mul get CorelShfillMapColor >>}for]/Encode[$fsc 1 sub{0 1}
repeat]/Bounds[$fsc 2 gt{1 1 $fsc 2 sub{/nColor exch def/nBandPos 0 def 0 1
nColor{dup nColor le{$fsa exch 2 mul 1 add get nBandPos add/nBandPos exch def
}if}for nBandPos $fst div}for}if]>> $pad 0 gt{/Extend[true true]}{/Extend
[false false]}ifelse >> shfill}bd/CorelShfillDoFill{$ctm setmatrix wclip @gs
$fty 3 eq $pad 0 gt and{bGradDeviceN{$fsa 0 get tint_params sNamesDeviceN
create_colorarray_from_devicen_params set_fill_color}{$fsa 0 get set_fill_color
}ifelse F}if @gr Bbllx Bblly Bburx Bbury 1 index 3 index m 2 copy l 3 index 1
index l 3 index 3 index l @cp pop pop pop pop $fan rotate $o 1 eq setoverprint
/bShfillDeviceN bGradDeviceN def CorelShfillFunction}bd/CorelShfillDoMesh{$o 1
eq setoverprint shfill}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
1.00 setflat
/$fst 2000 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
205.08293 653.77984 233.42939 682.12630 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.01 0.22 0.00 null ] set_fill_color
233.42939 653.77984 m
205.08293 653.77984 L
205.08293 682.12630 L
233.42939 682.12630 L
233.42939 653.77984 L
@c
F

@rax %Note: Object
205.36101 654.05792 233.15131 681.84850 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.02 0.03 0.88 null ] set_fill_color
208.17156 656.86876 m
233.00844 656.86876 l
233.08724 656.86876 233.15131 656.80526 233.15131 656.72816 c
233.15131 654.19824 l
233.15131 654.12113 233.08724 654.05792 233.00844 654.05792 c
223.83950 654.05792 214.67027 654.05792 205.50132 654.05792 c
205.42394 654.05792 205.36101 654.12567 205.36101 654.20872 c
205.36101 681.69770 l
205.36101 681.78047 205.42394 681.84850 205.50132 681.84850 c
208.03124 681.84850 l
208.10835 681.84850 208.17156 681.78047 208.17156 681.69770 c
208.17156 656.86876 L
@c
F

@rax %Note: Object
205.70485 654.40176 232.80746 681.50438 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.05 1.00 0.00 null ] set_fill_color
205.70485 681.50438 m
207.82772 681.50438 L
207.82772 656.52463 L
232.80746 656.52463 L
232.80746 654.40176 L
205.70485 654.40176 L
205.70485 681.50438 L
@c
F

@rax %Note: Object
209.83209 658.27871 222.94063 671.40425 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.34 0.13 0.00 0.66 null ]  0
[ 1.00 0.76 0.28 0.00 0.24 null ]  999
] 2 999 0 20.55 0 0.11 0 0 50 false set_gradient
210.77717 665.20545 m
211.75909 665.04076 212.23446 662.78239 211.37329 662.22283 C
211.22929 662.12957 210.65528 661.83392 210.61361 661.66072 C
210.59348 661.57654 210.90529 661.19357 210.95150 661.12668 C
210.99713 661.05978 211.24176 660.62920 211.32794 660.61729 C
211.53373 660.58980 212.10945 661.10683 212.27471 661.22532 C
213.39694 662.03631 214.97102 660.77036 214.69720 659.49874 C
214.66035 659.32696 214.44520 658.65600 214.54753 658.51937 C
214.62066 658.42243 215.20772 658.37197 215.32904 658.34674 C
215.39707 658.33257 215.72674 658.25036 215.79194 658.28920 C
216.00340 658.52334 216.02381 659.33461 216.07257 659.65833 C
216.21685 660.61956 218.31052 660.93534 218.76378 660.19294 C
218.91005 659.95427 219.06312 659.72041 219.21902 659.48825 C
219.32334 659.33348 219.46734 659.01487 219.66236 659.12542 C
219.88431 659.25156 220.47789 659.56507 220.59326 659.79269 C
220.65817 659.91997 220.12271 660.54756 220.05326 660.64479 C
219.51071 661.40079 220.51389 663.44457 221.39858 663.23282 C
221.58170 663.18888 221.76595 663.14891 221.95106 663.11093 C
222.03780 663.09307 222.65093 662.91931 222.70734 663.03638 C
222.84283 663.31843 223.17704 664.24989 222.66652 664.34542 C
222.66057 664.34683 L
222.36293 664.40239 222.06472 664.45540 221.76567 664.50302 C
220.96261 664.63228 220.43565 666.86939 221.10265 667.28183 C
221.25402 667.37565 221.40369 667.47260 221.55279 667.57181 C
221.62904 667.62198 222.17131 667.91877 222.12340 668.04803 C
222.05169 668.24050 221.57518 669.14617 221.31978 669.02712 C
220.99096 668.87376 220.67490 668.60674 220.38491 668.38819 C
219.71877 667.88674 217.80935 669.13370 217.99616 669.93647 C
218.09877 670.40844 L
218.12428 670.53515 218.27849 671.05077 218.20252 671.15225 C
218.03924 671.31439 217.17553 671.45357 216.95471 671.38753 C
216.88696 671.34047 216.83452 670.96857 216.82120 670.89487 C
216.71405 670.27039 L
216.55531 669.28394 214.31565 668.95994 213.83972 669.71027 C
213.69260 669.94243 213.54009 670.17061 213.38504 670.39739 C
213.09449 670.82173 212.48872 670.17487 212.23871 669.97020 C
212.10803 669.86362 212.18570 669.76044 212.27046 669.63657 C
212.66901 669.06595 L
213.20617 668.31109 211.96431 666.32088 210.97531 666.49238 C
210.75250 666.53121 210.54444 666.61569 210.32844 666.65594 C
210.26976 666.66699 210.13285 666.68740 210.08069 666.63950 C
209.95398 666.52243 209.88709 665.91524 209.85109 665.73553 C
209.83663 665.66353 209.81055 665.50167 209.86809 665.43789 C
209.99112 665.30154 210.59065 665.23663 210.77717 665.20545 C
@c
213.82668 664.84120 m
213.82668 666.25285 214.97187 667.39805 216.38381 667.39805 c
217.79603 667.39805 218.94094 666.25285 218.94094 664.84120 c
218.94094 663.42869 217.79603 662.28378 216.38381 662.28378 c
214.97187 662.28378 213.82668 663.42869 213.82668 664.84120 c
@c
F

@rax %Note: Object
218.68554 667.58712 231.79408 680.71266 @E
/$fm 0 def
0 O 0 @g
[ [ 1.00 0.34 0.13 0.00 0.66 null ]  0
[ 1.00 0.76 0.28 0.00 0.24 null ]  999
] 2 999 0 20.55 0 0.11 0 0 50 false set_gradient
219.80494 670.43509 m
219.85030 670.36819 220.09521 669.93761 220.18139 669.92598 C
220.38718 669.89820 220.96261 670.41524 221.12787 670.53402 C
222.25011 671.34501 223.82419 670.07906 223.55065 668.80715 C
223.51380 668.63537 223.29836 667.96469 223.40098 667.82806 C
223.47411 667.73083 224.06088 667.68066 224.18249 667.65515 C
224.25052 667.64098 224.57991 667.55877 224.64539 667.59789 C
224.85685 667.83175 224.87726 668.64302 224.92573 668.96674 C
225.07002 669.92825 227.16369 670.24375 227.61694 669.50135 C
227.76321 669.26268 227.91628 669.02910 228.07247 668.79694 C
228.17650 668.64217 228.32050 668.32328 228.51581 668.43411 C
228.73805 668.55997 229.33134 668.87376 229.44671 669.10110 C
229.51134 669.22838 228.97616 669.85597 228.90643 669.95348 C
228.36416 670.70948 229.36734 672.75326 230.25203 672.54123 C
230.43515 672.49757 230.61969 672.45732 230.80450 672.41962 C
230.89124 672.40176 231.50438 672.22772 231.56079 672.34479 C
231.69628 672.62712 232.03049 673.55858 231.51997 673.65411 C
231.51402 673.65524 L
231.21609 673.71080 230.91817 673.76381 230.61912 673.81172 C
229.81606 673.94069 229.28882 676.17780 229.95581 676.59052 C
230.10746 676.68435 230.25713 676.78129 230.40595 676.87994 C
230.48249 676.93068 231.02476 677.22718 230.97685 677.35644 C
230.90513 677.54920 230.42863 678.45458 230.17323 678.33581 C
229.84413 678.18217 229.52835 677.91515 229.23808 677.69660 C
228.57194 677.19543 226.66280 678.44211 226.84932 679.24488 C
226.88589 679.40192 226.91962 679.55953 226.95194 679.71713 C
226.97773 679.84356 227.13194 680.35946 227.05597 680.46094 C
226.89269 680.62309 226.02898 680.76198 225.80787 680.69594 C
225.74041 680.64917 225.68797 680.27726 225.67465 680.20328 C
225.63666 679.99550 225.60066 679.78743 225.56721 679.57880 C
225.40876 678.59235 223.16882 678.26835 222.69288 679.01868 C
222.54605 679.25083 222.39326 679.47931 222.23849 679.70580 C
221.94822 680.13014 221.34217 679.48328 221.09187 679.27861 C
220.96120 679.17231 221.03915 679.06913 221.12391 678.94469 C
221.52217 678.37436 L
222.05934 677.61950 220.81776 675.62957 219.82876 675.80107 C
219.60567 675.83991 219.39789 675.92438 219.18189 675.96435 C
219.12293 675.97540 218.98602 675.99609 218.93414 675.94819 C
218.80743 675.83083 218.74025 675.22365 218.70454 675.04394 C
218.69008 674.97194 218.66400 674.81008 218.72126 674.74630 C
218.84457 674.61024 219.44381 674.54532 219.63061 674.51414 C
220.61254 674.34945 221.08791 672.09080 220.22646 671.53096 C
220.08246 671.43798 219.50872 671.14233 219.46706 670.96942 C
219.44693 670.88494 219.75874 670.50227 219.80494 670.43509 C
@c
225.23726 671.59219 m
223.82532 671.59219 222.68013 672.73710 222.68013 674.14932 c
222.68013 675.56154 223.82532 676.70674 225.23726 676.70674 c
226.64920 676.70674 227.79439 675.56154 227.79439 674.14932 c
227.79439 672.73710 226.64920 671.59219 225.23726 671.59219 c
@c
F

@rax %Note: Object
222.68013 671.59219 227.79439 676.70674 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.28 0.35 0.00 0.56 null ] set_fill_color
225.23726 676.70674 m
226.64948 676.70674 227.79439 675.56154 227.79439 674.14961 c
227.79439 672.73739 226.64948 671.59219 225.23726 671.59219 c
223.82532 671.59219 222.68013 672.73739 222.68013 674.14961 c
222.68013 675.56154 223.82532 676.70674 225.23726 676.70674 c
@c
225.23726 675.88157 m
226.19395 675.88157 226.96894 675.10602 226.96894 674.14961 c
226.96894 673.19291 226.19395 672.41764 225.23726 672.41764 c
224.28085 672.41764 223.50529 673.19291 223.50529 674.14961 c
223.50529 675.10602 224.28085 675.88157 225.23726 675.88157 c
@c
F

@rax %Note: Object
217.86463 666.77187 232.58976 681.53159 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.28 0.35 0.00 0.56 null ] set_fill_color
222.69288 679.01868 m
223.16882 678.26835 225.40876 678.59235 225.56721 679.57880 C
225.60066 679.78743 225.63666 679.99550 225.67465 680.20328 C
225.68797 680.27726 225.74013 680.64917 225.80787 680.69594 C
226.02898 680.76198 226.89269 680.62309 227.05569 680.46094 C
227.13194 680.35918 226.97773 679.84356 226.95194 679.71713 C
226.91962 679.55953 226.88589 679.40192 226.84932 679.24517 C
226.66280 678.44211 228.57194 677.19543 229.23836 677.69688 C
229.52835 677.91515 229.84413 678.18217 230.17323 678.33553 C
230.42835 678.45458 230.90485 677.54920 230.97685 677.35644 C
231.02476 677.22718 230.48220 676.93039 230.40595 676.87994 C
230.25713 676.78129 230.10746 676.68435 229.95581 676.59052 C
229.28882 676.17780 229.81578 673.94069 230.61912 673.81172 C
230.91817 673.76381 231.21609 673.71080 231.51402 673.65524 C
231.51969 673.65411 L
232.03020 673.55858 231.69628 672.62712 231.56079 672.34479 C
231.50438 672.22772 230.89124 672.40148 230.80422 672.41962 C
230.61969 672.45732 230.43515 672.49729 230.25203 672.54123 C
229.36734 672.75326 228.36416 670.70948 228.90643 669.95348 C
228.97616 669.85597 229.51134 669.22866 229.44671 669.10110 C
229.33134 668.87376 228.73805 668.55997 228.51581 668.43411 C
228.32050 668.32328 228.17650 668.64217 228.07247 668.79694 C
227.91628 669.02882 227.76321 669.26268 227.61723 669.50135 C
227.16369 670.24375 225.07002 669.92797 224.92602 668.96674 C
224.87698 668.64302 224.85657 667.83203 224.64539 667.59789 C
224.57991 667.55877 224.25024 667.64098 224.18249 667.65515 C
224.06117 667.68066 223.47383 667.73083 223.40098 667.82806 C
223.29836 667.96469 223.51380 668.63565 223.55065 668.80715 C
223.82419 670.07906 222.25011 671.34501 221.12787 670.53402 C
220.96290 670.41524 220.38718 669.89820 220.18139 669.92598 C
220.09493 669.93761 219.85030 670.36819 219.80494 670.43509 C
219.75874 670.50198 219.44693 670.88494 219.46706 670.96942 C
219.50872 671.14233 220.08274 671.43798 220.22646 671.53124 C
221.08791 672.09080 220.61254 674.34945 219.63061 674.51414 C
219.44381 674.54532 218.84457 674.60995 218.72126 674.74658 C
218.66400 674.81008 218.68980 674.97194 218.70425 675.04394 C
218.74054 675.22365 218.80743 675.83112 218.93414 675.94819 C
218.98602 675.99609 219.12293 675.97540 219.18189 675.96435 C
219.39789 675.92409 219.60595 675.83991 219.82876 675.80107 C
220.81748 675.62957 222.05934 677.61950 221.52217 678.37436 C
221.12391 678.94498 L
221.03915 679.06913 220.96148 679.17231 221.09216 679.27861 C
221.34217 679.48328 221.94794 680.13014 222.23849 679.70608 C
222.39354 679.47931 222.54605 679.25112 222.69288 679.01868 C
@c
227.70737 680.95531 m
227.36381 681.41310 226.10863 681.63959 225.57742 681.48142 C
225.04195 681.32268 224.95408 680.81698 224.86932 680.34954 C
224.83049 680.13638 224.79364 679.92265 224.75906 679.70863 C
224.63631 679.48866 223.61443 679.34324 223.36838 679.48214 C
223.22126 679.71345 223.06876 679.94135 222.91398 680.16784 C
222.21071 681.19512 221.25685 680.47002 220.57455 679.91272 C
220.08614 679.51417 220.11647 678.96850 220.44869 678.48236 C
220.83931 677.92224 L
220.88183 677.61553 220.25934 676.60696 219.96709 676.60724 C
219.75307 676.64466 219.54756 676.72857 219.33213 676.76882 C
218.15802 676.98879 218.06674 676.02869 217.90176 675.20409 C
217.66167 673.99909 218.60901 673.85622 219.49483 673.70683 C
219.75052 673.58551 219.99685 672.40942 219.78028 672.21694 C
219.35339 671.94057 218.80488 671.71550 218.67165 671.16047 C
218.55146 670.65959 218.87858 670.33899 219.12945 669.97276 C
219.38031 669.60567 219.56031 669.18331 220.07282 669.11499 C
220.68567 669.03250 221.15849 669.54841 221.60636 669.87014 C
222.10072 670.22759 222.87118 669.53934 222.75043 668.97950 C
222.63732 668.45310 222.37483 667.83317 222.74617 667.33710 C
223.06932 666.90595 223.56028 666.94961 224.01524 666.85408 C
224.45291 666.76280 224.90589 666.66643 225.25228 667.04910 C
225.67975 667.52277 225.64573 668.25326 225.73502 668.84513 C
225.84614 669.03506 226.71184 669.16290 226.93691 669.04554 C
227.08375 668.80687 227.23710 668.57244 227.39357 668.34000 C
227.76038 667.79490 228.22328 667.32746 228.91946 667.72233 C
229.34948 667.96639 229.94674 668.27764 230.17663 668.73118 C
230.50573 669.38031 229.91584 669.94866 229.57172 670.42970 C
229.44898 670.65817 229.88551 671.54939 230.13609 671.72797 C
230.30362 671.68857 230.47172 671.65228 230.64038 671.61798 C
231.22261 671.49836 231.96019 671.28746 232.29808 671.99046 C
232.74765 672.92589 232.77600 674.25137 231.67077 674.45858 C
231.66454 674.45972 L
231.26825 674.53370 L
230.80394 674.61080 L
230.62479 674.81093 230.42665 675.65169 230.46973 675.94677 C
230.85751 676.19764 L
231.35698 676.52759 232.01745 676.90545 231.74362 677.64161 C
231.48057 678.34885 230.72542 679.49631 229.82712 679.07707 C
229.44954 678.90104 229.12611 678.63883 228.79644 678.38854 C
228.52290 678.41376 227.80006 678.88517 227.66145 679.12554 C
227.75329 679.55357 L
227.84910 680.02157 228.03392 680.51962 227.70737 680.95531 C
@c
F

@rax %Note: Object
213.82668 662.28378 218.94094 667.39805 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.28 0.35 0.00 0.56 null ] set_fill_color
216.38381 667.39805 m
217.79603 667.39805 218.94094 666.25285 218.94094 664.84091 c
218.94094 663.42869 217.79603 662.28378 216.38381 662.28378 c
214.97187 662.28378 213.82668 663.42869 213.82668 664.84091 c
213.82668 666.25285 214.97187 667.39805 216.38381 667.39805 c
@c
216.38381 666.57288 m
217.34050 666.57288 218.11578 665.79732 218.11578 664.84091 c
218.11578 663.88422 217.34050 663.10923 216.38381 663.10923 c
215.42740 663.10923 214.65184 663.88422 214.65184 664.84091 c
214.65184 665.79732 215.42740 666.57288 216.38381 666.57288 c
@c
F

@rax %Note: Object
209.01118 657.46346 223.73631 672.22318 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.28 0.35 0.00 0.56 null ] set_fill_color
213.83972 669.71027 m
214.31565 668.95994 216.55531 669.28394 216.71405 670.27039 C
216.74750 670.47874 216.78350 670.68709 216.82120 670.89458 C
216.83452 670.96857 216.88696 671.34076 216.95443 671.38753 C
217.17553 671.45357 218.03924 671.31468 218.20252 671.15225 C
218.27849 671.05077 218.12428 670.53515 218.09849 670.40872 C
218.06617 670.25083 218.03244 670.09323 217.99587 669.93647 C
217.80935 669.13370 219.71849 667.88674 220.38491 668.38819 C
220.67490 668.60674 220.99096 668.87376 221.31978 669.02712 C
221.57518 669.14617 222.05169 668.24050 222.12340 668.04775 C
222.17131 667.91877 221.62904 667.62198 221.55250 667.57153 C
221.40369 667.47288 221.25402 667.37594 221.10265 667.28183 C
220.43565 666.86939 220.96261 664.63228 221.76567 664.50331 C
222.06501 664.45540 222.36293 664.40239 222.66057 664.34683 C
222.66652 664.34570 L
223.17704 664.25017 222.84283 663.31843 222.70734 663.03638 C
222.65093 662.91931 222.03808 663.09307 221.95106 663.11093 C
221.76624 663.14891 221.58170 663.18888 221.39858 663.23282 C
220.51389 663.44485 219.51071 661.40079 220.05298 660.64479 C
220.12299 660.54756 220.65817 659.91997 220.59354 659.79269 C
220.47817 659.56507 219.88460 659.25156 219.66236 659.12542 C
219.46734 659.01487 219.32306 659.33348 219.21902 659.48854 C
219.06312 659.72041 218.90976 659.95427 218.76378 660.19294 C
218.31024 660.93534 216.21685 660.61956 216.07257 659.65833 C
216.02381 659.33461 216.00340 658.52334 215.79194 658.28920 C
215.72674 658.25008 215.39707 658.33257 215.32904 658.34674 C
215.20772 658.37197 214.62066 658.42214 214.54753 658.51937 C
214.44491 658.65628 214.66035 659.32696 214.69720 659.49874 C
214.97102 660.77036 213.39694 662.03660 212.27443 661.22532 C
212.10945 661.10683 211.53373 660.58980 211.32822 660.61757 C
211.24176 660.62920 210.99713 661.05978 210.95150 661.12668 C
210.90557 661.19357 210.59348 661.57654 210.61389 661.66072 C
210.65528 661.83392 211.22929 662.12957 211.37329 662.22255 C
212.23446 662.78211 211.75909 665.04104 210.77717 665.20545 C
210.59065 665.23691 209.99112 665.30154 209.86809 665.43789 C
209.81055 665.50167 209.83663 665.66353 209.85109 665.73553 C
209.88709 665.91524 209.95398 666.52243 210.08098 666.63950 C
210.13285 666.68740 210.26976 666.66699 210.32844 666.65594 C
210.54444 666.61569 210.75250 666.53121 210.97559 666.49238 C
211.96431 666.32117 213.20617 668.31109 212.66872 669.06595 C
212.27046 669.63628 L
212.18570 669.76044 212.10803 669.86362 212.23871 669.97020 C
212.48872 670.17487 213.09449 670.82173 213.38504 670.39739 C
213.54009 670.17090 213.69288 669.94243 213.83972 669.71027 C
@c
218.85392 671.64661 m
218.51036 672.10441 217.25546 672.33118 216.72425 672.17272 C
216.18850 672.01398 216.10063 671.50828 216.01616 671.04085 C
215.97732 670.82769 215.94019 670.61424 215.90589 670.39994 C
215.78287 670.18025 214.76126 670.03483 214.51493 670.17373 C
214.36781 670.40476 214.21531 670.63294 214.06054 670.85943 C
213.35726 671.88671 212.40340 671.16161 211.72110 670.60403 C
211.23298 670.20576 211.26302 669.66009 211.59553 669.17395 C
211.98614 668.61354 L
212.02866 668.30712 211.40589 667.29827 211.11392 667.29883 C
210.89962 667.33597 210.69411 667.41987 210.47896 667.46013 C
209.30485 667.68038 209.21329 666.72000 209.04860 665.89569 C
208.80850 664.69068 209.75556 664.54753 210.64167 664.39843 C
210.89707 664.27710 211.14340 663.10101 210.92683 662.90854 C
210.50022 662.63216 209.95172 662.40709 209.81820 661.85178 C
209.69802 661.35118 210.02513 661.03030 210.27628 660.66435 C
210.52715 660.29726 210.70687 659.87490 211.21965 659.80630 C
211.83250 659.72381 212.30504 660.23972 212.75291 660.56173 C
213.24756 660.91890 214.01773 660.23093 213.89726 659.67080 C
213.78387 659.14469 213.52139 658.52447 213.89272 658.02869 C
214.21616 657.59754 214.70683 657.64091 215.16180 657.54567 C
215.59946 657.45439 216.05272 657.35773 216.39883 657.74069 C
216.82658 658.21436 216.79257 658.94485 216.88157 659.53644 C
216.99269 659.72665 217.85868 659.85420 218.08375 659.73713 C
218.23030 659.49846 218.38365 659.26375 218.54013 659.03159 C
218.90721 658.48649 219.36983 658.01906 220.06630 658.41364 C
220.49631 658.65770 221.09357 658.96894 221.32346 659.42277 C
221.65228 660.07191 221.06239 660.64025 220.71855 661.12129 C
220.59581 661.34948 221.03206 662.24069 221.28293 662.41928 C
221.45017 662.38016 221.61827 662.34387 221.78721 662.30929 C
222.36945 662.18995 223.10674 661.97906 223.44491 662.68176 C
223.89420 663.61720 223.92283 664.94296 222.81732 665.14989 C
222.81109 665.15102 L
222.41509 665.22529 L
221.95049 665.30211 L
221.77162 665.50224 221.57348 666.34328 221.61657 666.63808 C
222.00435 666.88923 L
222.50353 667.21918 223.16400 667.59704 222.89046 668.33320 C
222.62712 669.04016 221.87225 670.18791 220.97395 669.76866 C
220.59609 669.59235 220.27294 669.33043 219.94328 669.08013 C
219.66945 669.10507 218.94690 669.57647 218.80828 669.81685 C
218.90013 670.24488 L
218.99565 670.71317 219.18076 671.21121 218.85392 671.64661 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
